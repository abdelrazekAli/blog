{"version":3,"sources":["context/Reducer.js","context/Context.js","views/Login.js","assets/images/defaultImg.jpg","components/blog/Post.js","components/blog/PostModal.js","views/Profile.js","views/Register.js","views/EditProfile.js","components/blog/Posts.js","views/Blog.js","components/NotFound.js","components/blog/AddPost.js","components/layout/Header.js","components/layout/Footer.js","components/blog/EditPost.js","components/blog/PostDetails.js","App.js","index.js","components/blog/Head.js"],"names":["Reducer","state","action","type","user","isFetching","error","payload","INITIAL_STATE","JSON","parse","localStorage","getItem","Context","createContext","ContextProvider","children","useReducer","dispatch","useEffect","setItem","stringify","Provider","value","Login","useContext","useState","touched","isValid","msg","emailValid","setEmailValid","passwordValid","setPasswordValid","submitHandler","e","a","preventDefault","email","target","password","axios","post","res","data","window","location","replace","console","log","Container","Row","Col","md","lg","className","Form","onSubmit","Group","controlId","Label","Control","placeholder","name","onBlur","val","trim","valids","length","test","emailStyle","onKeyUp","passwordStyle","Button","variant","disabled","Post","onShow","userProfile","onDelete","modalBtn","Card","to","_id","Img","src","postImg","defaultImg","Body","Title","title","Text","body","trimmedString","substr","Math","min","lastIndexOf","cutString","ListGroup","Item","createdBy","username","pathname","Date","createdAt","toDateString","style","marginRight","onClick","postTitle","postBody","PostModal","showModal","hideModal","modalData","Modal","show","size","centered","onHide","Header","closeButton","id","Footer","Profile","posts","setPosts","setModalData","setShowModal","useLocation","useParams","get","fetchPosts","Head","map","showModalFun","Spinner","animation","role","Register","usernameValid","setUsernameValid","isError","setError","isLoading","setisLoading","response","status","usernameStyle","EditProfile","setUsername","setEmail","updateForm","setUpdateForm","deleteSuccess","setDeleteSuccess","updateSuccess","setupdateSuccess","isSuccess","showAlert","setShowAlert","refreshToken","token","accessToken","axiosJWT","create","decodedToken","jwt_decode","interceptors","request","use","config","currentDate","exp","getTime","headers","err","Promise","reject","delete","put","Alert","onClose","dismissible","Heading","textAlign","onChange","validateEmail","Posts","Blog","NotFound","this","props","history","React","Component","AddPost","image","setImage","addSuccess","setaddSuccess","titleValid","setTitleValid","bodyValid","setBodyValid","addPostHandler","formData","FormData","append","method","url","reset","titleStyle","autoFocus","as","rows","bodyStyle","xs","Image","URL","createObjectURL","thumbnail","accept","files","handleLogout","Navbar","collapseOnSelect","expand","bg","sticky","Brand","Toggle","Collapse","Nav","exact","cursor","EditPost","postId","setTitle","setBody","PostDetails","setPost","fetchPost","setTimeout","lineHeight","About","lazy","App","basename","path","component","render","fallback","from","ReactDOM","StrictMode","document","getElementById"],"mappings":"sLAmBeA,EAnBC,SAACC,EAAOC,GACtB,OAAQA,EAAOC,MACb,IAAK,cACH,MAAO,CACLC,KAAM,KACNC,YAAY,EACZC,OAAO,GAEX,IAAK,gBACH,MAAO,CAAEF,KAAMF,EAAOK,QAASF,YAAY,EAAOC,OAAO,GAC3D,IAAK,gBACH,MAAO,CAAEF,KAAM,KAAMC,YAAY,EAAOC,OAAO,GACjD,IAAK,SACH,MAAO,CAAEF,KAAM,KAAMC,YAAY,EAAOC,OAAO,GACjD,QACE,OAAOL,I,OCZPO,EAAgB,CACpBJ,KAAMK,KAAKC,MAAMC,aAAaC,QAAQ,UAAY,KAClDP,YAAY,EACZC,OAAO,GAGIO,EAAUC,wBAAcN,GAExBO,EAAkB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAChC,EAA0BC,qBAAWjB,EAASQ,GAA9C,mBAAOP,EAAP,KAAciB,EAAd,KAMA,OAJAC,qBAAU,WACRR,aAAaS,QAAQ,OAAQX,KAAKY,UAAUpB,EAAMG,SACjD,CAACH,EAAMG,OAGR,cAACS,EAAQS,SAAT,CACEC,MAAO,CACLnB,KAAMH,EAAMG,KACZC,WAAYJ,EAAMI,WAClBC,MAAOL,EAAMK,MACbY,YALJ,SAQGF,K,2GCwHQQ,EA9ID,WACZ,MAAwCC,qBAAWZ,GAA3CK,EAAR,EAAQA,SAAUb,EAAlB,EAAkBA,WAAYC,EAA9B,EAA8BA,MAE9B,EAAoCoB,mBAAS,CAC3CC,SAAS,EACTC,SAAS,EACTC,IAAK,KAHP,mBAAOC,EAAP,KAAmBC,EAAnB,KAMA,EAA0CL,mBAAS,CACjDC,SAAS,EACTC,SAAS,EACTC,IAAK,KAHP,mBAAOG,EAAP,KAAsBC,EAAtB,KAgDMC,EAAa,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,yDACpBD,EAAEE,iBACFnB,EAAS,CAAEf,KAAM,gBACbmC,EAAQH,EAAEI,OAAOD,MAAMf,MACzBiB,EAAWL,EAAEI,OAAOC,SAASjB,MAJX,UAMdO,EAAWF,UAAWI,EAAcJ,QANtB,iCAOAa,IAAMC,KAAK,sBAAuB,CAAEJ,QAAOE,aAP3C,OAOZG,EAPY,OAQhBzB,EAAS,CAAEf,KAAM,gBAAiBI,QAASoC,EAAIC,OAC/CC,OAAOC,SAASC,QAAQ,QATR,0DAYlB7B,EAAS,CAAEf,KAAM,kBACjB6C,QAAQC,IAAR,MAbkB,0DAAH,sDAiCnB,OACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,UAAU,uCAA7B,UACE,oBAAIA,UAAU,qCAAd,mBACA,eAACC,EAAA,EAAD,CAAMC,SAAUvB,EAAhB,UACE,eAACsB,EAAA,EAAKE,MAAN,CAAYH,UAAU,OAAOI,UAAU,4BAAvC,UACE,cAACH,EAAA,EAAKI,MAAN,4BACA,cAACJ,EAAA,EAAKK,QAAN,CACE1D,KAAK,QACL2D,YAAY,cACZC,KAAK,QACLC,OAlFe,SAAC7B,GAC5B,IAAI8B,EAAM9B,EAAEI,OAAOhB,MAAM2C,OACrBC,EAAM,eAAQrC,GAClBqC,EAAOxC,SAAU,EACbsC,EAAIG,QAAU,GAChBD,EAAOvC,SAAU,EACjBuC,EAAOtC,IAAM,sBAVN,eACCwC,KAUgBJ,GAGfA,EAAIG,OAAS,KACtBD,EAAOvC,SAAU,EACjBuC,EAAOtC,IAAM,4CAEbsC,EAAOvC,SAAU,EACjBuC,EAAOtC,IAAM,KAPbsC,EAAOvC,SAAU,EACjBuC,EAAOtC,IAAM,sBAQfE,EAAc,eAAKoC,KAkEPZ,UA7BK,WACjB,GAAIzB,EAAWH,QACb,OAAIG,EAAWF,QACN,wBACK,uBAyBO0C,KAEZxC,EAAWD,KACV,uBAAO0B,UAAU,kBAAjB,SAAoCzB,EAAWD,SAGnD,eAAC2B,EAAA,EAAKE,MAAN,CAAYH,UAAU,OAAOI,UAAU,wBAAvC,UACE,cAACH,EAAA,EAAKI,MAAN,uBACA,cAACJ,EAAA,EAAKK,QAAN,CACE1D,KAAK,WACL2D,YAAY,iBACZC,KAAK,WACLQ,QA3EkB,SAACpC,GAC/B,IAAI8B,EAAM9B,EAAEI,OAAOhB,MAAM2C,OACrBC,EAAM,eAAQnC,GAClBmC,EAAOxC,SAAU,EACbsC,EAAIG,QAAU,GAChBD,EAAOvC,SAAU,EACjBuC,EAAOtC,IAAM,yBACJoC,EAAIG,OAAS,KACtBD,EAAOvC,SAAU,EACjBuC,EAAOtC,IAAM,+CAEbsC,EAAOvC,SAAU,EACjBuC,EAAOtC,IAAM,IAEfI,EAAiB,eAAKkC,KA8DVZ,UAlCQ,WACpB,GAAIvB,EAAcL,QAChB,OAAIK,EAAcJ,QACT,wBACK,uBA8BO4C,KAEZxC,EAAcH,KACb,uBAAO0B,UAAU,kBAAjB,SAAoCvB,EAAcH,SAGtD,cAAC4C,EAAA,EAAD,CACEC,QAAQ,UACRvE,KAAK,SACLoD,UAAU,QACVoB,UAAW7C,EAAWF,UAAYI,EAAcJ,QAJlD,SAMGvB,EAAa,cAAgB,UAE/BC,GACC,qBAAKiD,UAAU,sCAAf,kD,0BCxIC,MAA0B,uCCqG1BqB,EA/FF,SAAC,GAAuD,IAArDlC,EAAoD,EAApDA,KAAMmC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,YAAaC,EAAyB,EAAzBA,SACjC3E,GAD0D,EAAf4E,SAClCvD,qBAAWZ,GAApBT,MAaR,OACE,eAAC6E,EAAA,EAAD,CAAM1B,UAAU,oBAAhB,UACE,cAAC,IAAD,CAAM2B,GAAE,iBAAYxC,EAAKyC,KAAzB,SACE,cAACF,EAAA,EAAKG,IAAN,CACEV,QAAQ,MACRW,IACE3C,EAAK4C,QAAL,qEACkE5C,EAAK4C,SACnEC,MAIV,eAACN,EAAA,EAAKO,KAAN,WACE,sBAAKjC,UAAU,mBAAf,UACE,cAAC0B,EAAA,EAAKQ,MAAN,UAAa/C,EAAKgD,QAClB,cAACT,EAAA,EAAKU,KAAN,UAzBU,WAChB,GAAIjD,EAAKkD,KAAKxB,OAAS,IAAK,OAAO1B,EAAKkD,KACxC,IAAIC,EAAgBnD,EAAKkD,KAAKE,OAAO,EAAG,KAKxC,OAJAD,EAAgBA,EAAcC,OAC5B,EACAC,KAAKC,IAAIH,EAAczB,OAAQyB,EAAcI,YAAY,OAErD,GAAN,OAAUJ,EAAV,UAkBkBK,QAEd,eAACC,EAAA,EAAD,CAAWzB,QAAQ,QAAnB,UACE,cAACyB,EAAA,EAAUC,KAAX,UACGhG,GAAQA,EAAK+E,MAAQzC,EAAK2D,UAAUlB,IACnC,cAAC,IAAD,CAAM5B,UAAU,gBAAgB2B,GAAG,gBAAnC,SACGxC,EAAK2D,UAAY3D,EAAK2D,UAAUC,SAAW,SAG9C,cAAC,IAAD,CACE/C,UAAU,gBACV2B,GAAI,CACFqB,SAAS,YAAD,OAAc7D,EAAK2D,UAAUlB,KACrClF,MAAO,CACLqG,SAAU5D,EAAK2D,UAAUC,WAL/B,SASG5D,EAAK2D,UAAY3D,EAAK2D,UAAUC,SAAW,WAIlD,cAACH,EAAA,EAAUC,KAAX,UACG,IAAII,KAAK9D,EAAK+D,WAAWC,iBAE5B,eAACP,EAAA,EAAUC,KAAX,WACE,cAAC,IAAD,CACE7C,UAAU,kBACVoD,MAAO,CAAEC,YAAa,OACtB1B,GAAE,iBAAYxC,EAAKyC,KAHrB,wBAOEL,GACA,cAACL,EAAA,EAAD,CAAQC,QAAQ,UAAUmC,QAAS,kBAAMhC,EAAOnC,IAAhD,wBAIDoC,GACC,qCACE,cAAC,IAAD,CACEvB,UAAU,kBACV2B,GAAI,CACFqB,SAAS,cAAD,OAAgB7D,EAAKyC,KAC7BlF,MAAO,CACL6G,UAAWpE,EAAKgD,MAChBqB,SAAUrE,EAAKkD,KACfN,QAAS5C,EAAK4C,UAGlBqB,MAAO,CAAEC,YAAa,OAVxB,uBAcA,cAACnC,EAAA,EAAD,CAAQC,QAAQ,SAASmC,QAAS,kBAAM9B,EAASrC,IAAjD,yC,SCrEDsE,EAlBG,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,UAAWC,EAA2B,EAA3BA,UAAWC,EAAgB,EAAhBA,UACzC,OACE,eAACC,EAAA,EAAD,CAAOC,KAAMJ,EAAWK,KAAK,KAAKC,UAAQ,EAACC,OAAQN,EAAnD,UACE,cAACE,EAAA,EAAMK,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACN,EAAA,EAAM3B,MAAP,CAAakC,GAAG,gCAAhB,SACGR,EAAUzB,UAGf,cAAC0B,EAAA,EAAM5B,KAAP,UACE,4BAAI2B,EAAUvB,SAEhB,cAACwB,EAAA,EAAMQ,OAAP,UACE,cAACnD,EAAA,EAAD,CAAQoC,QAASK,EAAjB,yBCsDOW,EA5DC,WACd,MAA0BnG,mBAAS,IAAnC,mBAAOoG,EAAP,KAAcC,EAAd,KACA,EAAkCrG,mBAAS,IAA3C,mBAAOyF,EAAP,KAAkBa,EAAlB,KACA,EAAkCtG,oBAAS,GAA3C,mBAAOuF,EAAP,KAAkBgB,EAAlB,KAEMnF,EAAWoF,cACTP,EAAOQ,cAAPR,GACArB,EAAaxD,EAAS7C,MAAtBqG,SAERnF,qBAAU,YACQ,uCAAG,4BAAAiB,EAAA,+EAEGK,IAAM2F,IAAN,+BAAkCT,IAFrC,OAEThF,EAFS,OAGfoF,EAASpF,EAAIC,MAHE,gDAKfI,QAAQC,IAAR,MALe,yDAAH,qDAQhBoF,KACC,CAACV,IAuBJ,OACE,qCACE,cAACW,EAAA,EAAD,CAAM5C,MAAK,UAAKY,KAChB,eAACpD,EAAA,EAAD,WACE,qBAAIyE,GAAG,QAAQpE,UAAU,0CAAzB,UACG+C,EADH,YAGA,cAAC,EAAD,CACEW,UAAWA,EACXC,UAzBU,WAChBe,GAAa,IAyBPd,UAAWA,IAEb,cAAChE,EAAA,EAAD,CAAKI,UAAU,6BAAf,SAvBGuE,EAAM1D,OAAS,EACpB0D,EAAMS,KAAI,SAAC7F,GAAD,OACR,cAACU,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAhB,SACE,cAAC,EAAD,CAAMZ,KAAMA,EAAMmC,OAAQ,kBAbb,SAACnC,GACpBuF,GAAa,GACbD,EAAatF,GAWyB8F,CAAa9F,OADvBA,EAAKyC,QAK/B,cAACsD,EAAA,EAAD,CAASC,UAAU,SAASC,KAAK,oBCkLxBC,EA5NE,WACf,MAA0ClH,mBAAS,CACjDC,SAAS,EACTC,SAAS,EACTC,IAAK,KAHP,mBAAOgH,EAAP,KAAsBC,EAAtB,KAMA,EAAoCpH,mBAAS,CAC3CC,SAAS,EACTC,SAAS,EACTC,IAAK,KAHP,mBAAOC,EAAP,KAAmBC,EAAnB,KAMA,EAA0CL,mBAAS,CACjDC,SAAS,EACTC,SAAS,EACTC,IAAK,KAHP,mBAAOG,EAAP,KAAsBC,EAAtB,KAMA,EAA0BP,mBAAS,CACjCqH,SAAS,EACTlH,IAAK,KAFP,mBAAOvB,EAAP,KAAc0I,EAAd,KAKA,EAAkCtH,oBAAS,GAA3C,mBAAOuH,EAAP,KAAkBC,EAAlB,KAmEMhH,EAAa,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,yDACpBD,EAAEE,iBAEF6G,GAAa,GACbF,EAAS,CAAED,SAAS,EAAOlH,IAAK,KAE5ByE,EAAWnE,EAAEI,OAAO+D,SAAS/E,MAC/Be,EAAQH,EAAEI,OAAOD,MAAMf,MACvBiB,EAAWL,EAAEI,OAAOC,SAASjB,MARX,WAYhBsH,EAAcjH,SACdE,EAAWF,SACXI,EAAcJ,SAdE,iCAgBAa,IAAMC,KAAK,gBAAiB,CAC1C4D,WACAhE,QACAE,aAnBc,cAqBRI,OACNC,OAAOC,SAASC,QAAQ,cACxBmG,GAAa,IAvBC,0DA2BlBA,GAAa,GACe,MAAxB,KAAIC,SAASC,OACfJ,EAAS,CAAED,SAAS,EAAMlH,IAAK,0BAE/BmH,EAAS,CAAED,SAAS,EAAMlH,IAAK,yBA/Bf,0DAAH,sDA4DnB,OACE,cAACqB,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,UAAU,uCAA7B,UACE,oBAAIA,UAAU,qCAAd,sBACA,eAACC,EAAA,EAAD,CAAMC,SAAUvB,EAAhB,UACE,eAACsB,EAAA,EAAKE,MAAN,CAAYH,UAAU,OAAtB,UACE,cAACC,EAAA,EAAKI,MAAN,uBACA,cAACJ,EAAA,EAAKK,QAAN,CACE1D,KAAK,OACL2D,YAAY,iBACZC,KAAK,WACLC,OAzIkB,SAAC7B,GAC/B,IAAI8B,EAAM9B,EAAEI,OAAOhB,MAAM2C,OACrBC,EAAM,eAAQ0E,GAClB1E,EAAOxC,SAAU,EACbsC,EAAIG,QAAU,GAChBD,EAAOvC,SAAU,EACjBuC,EAAOtC,IAAM,yBACJoC,EAAIG,OAAS,GACtBD,EAAOvC,SAAU,EACjBuC,EAAOtC,IAAM,4CACJoC,EAAIG,OAAS,KACtBD,EAAOvC,SAAU,EACjBuC,EAAOtC,IAAM,+CAEbsC,EAAOvC,SAAU,EACjBuC,EAAOtC,IAAM,IAEfiH,EAAiB,eAAK3E,KAyHVZ,UArCQ,WACpB,GAAIsF,EAAclH,QAChB,OAAIkH,EAAcjH,QACT,wBACK,uBAiCOyH,KAEZR,EAAchH,KACb,uBAAO0B,UAAU,kBAAjB,SAAoCsF,EAAchH,SAGtD,eAAC2B,EAAA,EAAKE,MAAN,CAAYH,UAAU,OAAOI,UAAU,4BAAvC,UACE,cAACH,EAAA,EAAKI,MAAN,4BACA,cAACJ,EAAA,EAAKK,QAAN,CACE1D,KAAK,QACL2D,YAAY,cACZC,KAAK,QACLC,OA7He,SAAC7B,GAC5B,IAAI8B,EAAM9B,EAAEI,OAAOhB,MAAM2C,OACrBC,EAAM,eAAQrC,GAClBqC,EAAOxC,SAAU,EACbsC,EAAIG,QAAU,GAChBD,EAAOvC,SAAU,EACjBuC,EAAOtC,IAAM,sBAVN,eACCwC,KAUgBJ,GAGfA,EAAIG,OAAS,KACtBD,EAAOvC,SAAU,EACjBuC,EAAOtC,IAAM,4CAEbsC,EAAOvC,SAAU,EACjBuC,EAAOtC,IAAM,KAPbsC,EAAOvC,SAAU,EACjBuC,EAAOtC,IAAM,sBAQfE,EAAc,eAAKoC,KA6GPZ,UA1CK,WACjB,GAAIzB,EAAWH,QACb,OAAIG,EAAWF,QACN,wBACK,uBAsCO0C,KAEZxC,EAAWD,KACV,uBAAO0B,UAAU,kBAAjB,SAAoCzB,EAAWD,SAGnD,eAAC2B,EAAA,EAAKE,MAAN,CAAYH,UAAU,OAAOI,UAAU,yBAAvC,UACE,cAACH,EAAA,EAAKI,MAAN,uBACA,cAACJ,EAAA,EAAKK,QAAN,CACE1D,KAAK,WACL2D,YAAY,iBACZC,KAAK,WACLQ,QAtHkB,SAACpC,GAC/B,IAAI8B,EAAM9B,EAAEI,OAAOhB,MAAM2C,OACrBC,EAAM,eAAQnC,GAClBmC,EAAOxC,SAAU,EACbsC,EAAIG,QAAU,GAChBD,EAAOvC,SAAU,EACjBuC,EAAOtC,IAAM,yBACJoC,EAAIG,OAAS,GACtBD,EAAOvC,SAAU,EACjBuC,EAAOtC,IAAM,4CACJoC,EAAIG,OAAS,KACtBD,EAAOvC,SAAU,EACjBuC,EAAOtC,IAAM,+CAEbsC,EAAOvC,SAAU,EACjBuC,EAAOtC,IAAM,IAEfI,EAAiB,eAAKkC,KAsGVZ,UA/CQ,WACpB,GAAIvB,EAAcL,QAChB,OAAIK,EAAcJ,QACT,wBACK,uBA2CO4C,KAEZxC,EAAcH,KACb,uBAAO0B,UAAU,kBAAjB,SAAoCvB,EAAcH,SAGtD,cAAC4C,EAAA,EAAD,CACEC,QAAQ,UACRvE,KAAK,SACLoD,UAAU,QACVoB,UACGkE,EAAcjH,UACdE,EAAWF,UACXI,EAAcJ,QAPnB,SAUGqH,EAAY,cAAgB,aAE9B3I,EAAMyI,SACL,qBAAKxF,UAAU,sCAAf,SACGjD,EAAMuB,iB,iBCiHRyH,EA/TK,WAClB,MAA2B7H,qBAAWZ,GAA9BT,EAAR,EAAQA,KAAMc,EAAd,EAAcA,SAEd,EAAgCQ,mBAAStB,EAAKkG,UAA9C,mBAAOA,EAAP,KAAiBiD,EAAjB,KACA,EAA0B7H,mBAAStB,EAAKkC,OAAxC,mBAAOA,EAAP,KAAckH,EAAd,KAEA,EAA0C9H,mBAAS,CACjDC,SAAS,EACTC,SAAS,EACTC,IAAK,KAHP,mBAAOgH,EAAP,KAAsBC,EAAtB,KAMA,EAAoCpH,mBAAS,CAC3CC,SAAS,EACTC,SAAS,EACTC,IAAK,KAHP,mBAAOC,EAAP,KAAmBC,EAAnB,KAMA,EAA0BL,mBAAS,IAAnC,mBAAOoG,EAAP,KAAcC,EAAd,KACA,EAAkCrG,oBAAS,GAA3C,mBAAOuH,EAAP,KAAkBC,EAAlB,KACA,EAAoCxH,oBAAS,GAA7C,mBAAO+H,EAAP,KAAmBC,EAAnB,KACA,EAA0ChI,oBAAS,GAAnD,mBAAOiI,EAAP,KAAsBC,EAAtB,KACA,EAA0ClI,oBAAS,GAAnD,mBAAOmI,GAAP,KAAsBC,GAAtB,KAEA,GAAkCpI,mBAAS,CACzCqH,SAAS,EACTgB,WAAW,IAFb,qBAAOC,GAAP,MAAkBC,GAAlB,MAKA,GAA0BvI,mBAAS,CACjCqH,SAAS,EACTlH,IAAK,KAFP,qBAAOvB,GAAP,MAAc0I,GAAd,MAKA7H,qBAAU,YACQ,uCAAG,4BAAAiB,EAAA,+EAEGK,IAAM2F,IAAN,+BAAkChI,EAAK+E,MAF1C,OAETxC,EAFS,OAGfoF,EAASpF,EAAIC,MAHE,gDAKfI,QAAQC,IAAR,MALe,yDAAH,qDAQhBoF,KACC,CAACsB,EAAevJ,EAAK+E,IAAK0E,KAE7B,IAAMK,GAAY,uCAAG,4BAAA9H,EAAA,+EAECK,IAAMC,KAAK,8BAA+B,CAC1DyH,MAAO/J,EAAK8J,eAHG,cAEXvH,EAFW,OAKjBzB,EAAS,CACPf,KAAM,gBACNI,QAAQ,2BAAMH,GAAP,IAAagK,YAAazH,EAAIC,KAAKwH,gBAP3B,kBASVzH,EAAIC,MATM,gCAWjBI,QAAQC,IAAR,MAXiB,yDAAH,qDAeZoH,GAAW5H,IAAM6H,SAEjBC,GAAeC,YAAWpK,EAAKgK,aACrCC,GAASI,aAAaC,QAAQC,IAA9B,+BAAAvI,EAAA,MACE,WAAOwI,GAAP,iBAAAxI,EAAA,yDACMyI,EAAc,IAAIrE,OACC,IAAnB+D,GAAaO,IAAaD,EAAYE,WAF5C,gCAGuBb,KAHvB,OAGUtH,EAHV,OAIIgI,EAAOI,QAAQ,cAAgBpI,EAAKwH,YAJxC,gCAMSQ,GANT,2CADF,uDASE,SAACK,GACC,OAAOC,QAAQC,OAAOF,MAI1B,IAAMlG,GAAQ,uCAAG,WAAOrC,GAAP,SAAAN,EAAA,+EAEGiI,GAASe,OAAT,wBAAiC1I,EAAKyC,KAAO,CAC3D6F,QAAS,CACP,aAAc5K,EAAKgK,eAJV,gBAQXR,GAAkBD,GAClBM,GAAa,CAAElB,SAAS,EAAOgB,WAAW,KAT/B,gDAYb/G,QAAQC,IAAR,MACAgH,GAAa,CAAElB,SAAS,EAAMgB,WAAW,IAb5B,yDAAH,sDA+DR7H,GAAa,uCAAG,WAAOC,GAAP,eAAAC,EAAA,yDACpBD,EAAEE,iBADkB,SAGlB6G,GAAa,GACbF,GAAS,CAAED,SAAS,EAAOlH,IAAK,MAC5BgH,EAAcjH,UAAWE,EAAWF,QALtB,gCAMAyI,GAASgB,IAAT,wBACGjL,EAAK+E,KACtB,CAAEmB,WAAUhE,SACZ,CAAE0I,QAAS,CAAE,aAAc5K,EAAKgK,eATlB,QAMZzH,EANY,UAadzB,EAAS,CACPf,KAAM,gBACNI,QAAQ,2BACHH,GADE,IAELkG,SAAU3D,EAAIC,KAAK0D,SACnBhE,MAAOK,EAAIC,KAAKN,UAGpB4G,GAAa,GACbY,IAAiB,IAtBH,yDA0BlBA,IAAiB,GACjBZ,GAAa,GACe,MAAxB,KAAIC,SAASC,OACfJ,GAAS,CAAED,SAAS,EAAMlH,IAAK,0BAE/BmH,GAAS,CAAED,SAAS,EAAMlH,IAAK,yBA/Bf,0DAAH,sDAmEnB,OACE,eAACqB,EAAA,EAAD,WACG8G,GAAUjB,SACT,cAACuC,EAAA,EAAD,CACE5G,QAAQ,SACR6G,QAAS,kBACPtB,GAAa,CACXlB,SAAS,EACTgB,WAAW,KAGfxG,UAAU,gBACViI,aAAW,EATb,SAWE,cAACF,EAAA,EAAMG,QAAP,CAAelI,UAAU,MAAzB,oCAGHyG,GAAUD,WACT,cAACuB,EAAA,EAAD,CACE5G,QAAQ,UACR6G,QAAS,kBACPtB,GAAa,CACXlB,SAAS,EACTgB,WAAW,KAGfxG,UAAU,gBACViI,aAAW,EATb,SAWE,cAACF,EAAA,EAAMG,QAAP,CAAelI,UAAU,MAAzB,kDAMJ,cAACJ,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,UAAU,uCAA7B,WACIkG,GACA,qBAAK9C,MAAO,CAAE+E,UAAW,UAAzB,SACE,cAACjH,EAAA,EAAD,CACEC,QAAQ,UACRnB,UAAU,OACVsD,QAAS,kBAAM6C,GAAc,IAH/B,8BASHD,GACC,eAACjG,EAAA,EAAD,CAAMC,SAAUvB,GAAhB,UACE,eAACsB,EAAA,EAAKE,MAAN,CAAYH,UAAU,OAAtB,UACE,cAACC,EAAA,EAAKI,MAAN,uBACA,cAACJ,EAAA,EAAKK,QAAN,CACE1D,KAAK,OACL2D,YAAY,iBACZC,KAAK,WACLxC,MAAO+E,EACPqF,SA3KgB,SAACxJ,GAC/B,IAAI8B,EAAM9B,EAAEI,OAAOhB,MACnBgI,EAAYtF,GACZ,IAAIE,EAAM,eAAQ0E,GAClB1E,EAAOxC,SAAU,EACbsC,EAAIG,QAAU,GAChBD,EAAOvC,SAAU,EACjBuC,EAAOtC,IAAM,yBACJoC,EAAIG,OAAS,GACtBD,EAAOvC,SAAU,EACjBuC,EAAOtC,IAAM,4CACJoC,EAAIG,OAAS,KACtBD,EAAOvC,SAAU,EACjBuC,EAAOtC,IAAM,+CAEbsC,EAAOvC,SAAU,EACjBuC,EAAOtC,IAAM,IAEfiH,EAAiB,eAAK3E,KA0JRZ,UAzFM,WACpB,GAAIsF,EAAclH,QAChB,OAAIkH,EAAcjH,QACT,wBACK,uBAqFSyH,KAEZR,EAAchH,KACb,uBAAO0B,UAAU,kBAAjB,SAAoCsF,EAAchH,SAGtD,eAAC2B,EAAA,EAAKE,MAAN,CACEH,UAAU,OACVI,UAAU,4BAFZ,UAIE,cAACH,EAAA,EAAKI,MAAN,4BACA,cAACJ,EAAA,EAAKK,QAAN,CACE1D,KAAK,QACL2D,YAAY,cACZC,KAAK,QACLxC,MAAOe,EACPqJ,SAlKa,SAACxJ,GAC5B,IAAI8B,EAAM9B,EAAEI,OAAOhB,MACnBiI,EAASvF,GACT,IAAIE,EAAM,eAAQrC,GAClBqC,EAAOxC,SAAU,EACbsC,EAAIG,QAAU,GAChBD,EAAOvC,SAAU,EACjBuC,EAAOtC,IAAM,uBAZK,SAACS,GAErB,MADS,eACC+B,KAAK/B,GAWHsJ,CAAc3H,IACxBE,EAAOvC,SAAU,EACjBuC,EAAOtC,IAAM,sBACJoC,EAAIG,OAAS,KACtBD,EAAOvC,SAAU,EACjBuC,EAAOtC,IAAM,4CAEbsC,EAAOvC,SAAU,EACjBuC,EAAOtC,IAAM,IAEfE,EAAc,eAAKoC,KAiJLZ,UAlGG,WACjB,GAAIzB,EAAWH,QACb,OAAIG,EAAWF,QACN,wBACK,uBA8FS0C,KAEZxC,EAAWD,KACV,uBAAO0B,UAAU,kBAAjB,SAAoCzB,EAAWD,SAGnD,cAAC4C,EAAA,EAAD,CACEC,QAAQ,UACRvE,KAAK,SACLoD,UAAU,QACVoB,UAAWkE,EAAcjH,UAAYE,EAAWF,QAJlD,SAMGqH,EAAY,cAAgB,WAE9BY,IACC,qBAAKtG,UAAU,uCAAf,iCAIDjD,GAAMyI,SACL,qBAAKxF,UAAU,sCAAf,SACGjD,GAAMuB,cAOnB,oBAAI8F,GAAG,QAAQpE,UAAU,0CAAzB,wBAGA,cAACJ,EAAA,EAAD,CAAKI,UAAU,6BAAf,SAxHKuE,EAAM1D,OAAS,EACpB0D,EAAMS,KAAI,SAAC7F,GAAD,OACR,cAACU,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAhB,SACE,cAAC,EAAD,CAAMZ,KAAMA,EAAMoC,aAAa,EAAMC,SAAUA,MADzBrC,EAAKyC,QAM/B,qBAAI5B,UAAU,OAAd,wCAC6B,cAAC,IAAD,CAAM2B,GAAG,YAAT,gCC1JpB2G,EAnDD,WACZ,MAA0BnK,mBAAS,IAAnC,mBAAOoG,EAAP,KAAcC,EAAd,KACA,EAAkCrG,mBAAS,IAA3C,mBAAOyF,EAAP,KAAkBa,EAAlB,KACA,EAAkCtG,oBAAS,GAA3C,mBAAOuF,EAAP,KAAkBgB,EAAlB,KAEA9G,qBAAU,YACQ,uCAAG,4BAAAiB,EAAA,+EAEGK,IAAM2F,IAAI,iBAFb,QAETzF,EAFS,SAGRoF,EAASpF,EAAIC,MAHL,gDAKfI,QAAQC,IAAR,MALe,yDAAH,qDAQhBoF,KACC,IAWH,OACE,eAACnF,EAAA,EAAD,WACE,oBAAIyE,GAAG,QAAQpE,UAAU,0CAAzB,mBAGA,cAAC,EAAD,CACE0D,UAAWA,EACXC,UAXY,WAChBe,GAAa,IAWTd,UAAWA,IAEb,cAAChE,EAAA,EAAD,CAAKI,UAAU,6BAAf,SACGuE,EAAM1D,OAAS,EACd0D,EAAMS,KAAI,SAAC7F,GAAD,OACR,cAACU,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAhB,SACE,cAAC,EAAD,CAAMZ,KAAMA,EAAMmC,OAAQ,kBAvBjB,SAACnC,GACpBuF,GAAa,GACbD,EAAatF,GAqB6B8F,CAAa9F,OADvBA,EAAKyC,QAK/B,cAACsD,EAAA,EAAD,CAASlF,UAAU,OAAOmF,UAAU,SAASC,KAAK,iBClC7CmD,EAXF,WACX,IAAQ1L,EAASqB,qBAAWZ,GAApBT,KAER,OACE,gCACE,cAACkI,EAAA,EAAD,CAAM5C,MAAOtF,GAAI,kBAAeA,EAAKkG,SAApB,mBACjB,cAAC,EAAD,Q,gCCISyF,E,uKAZb,WACEC,KAAKC,MAAMC,QAAQnJ,QAAQ,gB,oBAE7B,WACE,OACE,8BACE,cAACuF,EAAA,EAAD,CAAM5C,MAAM,wB,GAPGyG,IAAMC,W,SC0OdC,EAtOC,SAACJ,GACf,MAA2BxK,qBAAWZ,GAA9BT,EAAR,EAAQA,KAAMc,EAAd,EAAcA,SACd,EAA0BQ,mBAAS,MAAnC,mBAAO4K,EAAP,KAAcC,EAAd,KACA,EAAkC7K,oBAAS,GAA3C,mBAAOuH,EAAP,KAAkBC,EAAlB,KACA,EAAoCxH,oBAAS,GAA7C,mBAAO8K,EAAP,KAAmBC,EAAnB,KAEA,EAAoC/K,mBAAS,CAC3CC,SAAS,EACTC,SAAS,EACTC,IAAK,KAHP,mBAAO6K,EAAP,KAAmBC,EAAnB,KAMA,EAAkCjL,mBAAS,CACzCC,SAAS,EACTC,SAAS,EACTC,IAAK,KAHP,mBAAO+K,EAAP,KAAkBC,EAAlB,KAMA,EAA0BnL,mBAAS,CACjCqH,SAAS,EACTlH,IAAK,KAFP,mBAAOvB,EAAP,KAAc0I,EAAd,KA+DMkB,EAAY,uCAAG,4BAAA9H,EAAA,+EAECK,IAAMC,KAAK,8BAA+B,CAC1DyH,MAAO/J,EAAK8J,eAHG,cAEXvH,EAFW,OAKjBzB,EAAS,CACPf,KAAM,gBACNI,QAAQ,2BAAMH,GAAP,IAAagK,YAAazH,EAAIC,KAAKwH,gBAP3B,kBASVzH,EAAIC,MATM,gCAWjBI,QAAQC,IAAR,MAXiB,yDAAH,qDAeZoH,EAAW5H,IAAM6H,SAEvBD,EAASI,aAAaC,QAAQC,IAA9B,+BAAAvI,EAAA,MACE,WAAOwI,GAAP,iBAAAxI,EAAA,yDACMyI,EAAc,IAAIrE,OAEC,IADFgE,YAAWpK,EAAKgK,aACpBU,IAAaD,EAAYE,WAH5C,gCAIuBb,IAJvB,OAIUtH,EAJV,OAKIgI,EAAOI,QAAQ,cAAgBpI,EAAKwH,YALxC,gCAOSQ,GAPT,2CADF,uDAUE,SAACK,GACC,OAAOC,QAAQC,OAAOF,MAI1B,IAAM6B,EAAc,uCAAG,WAAO3K,GAAP,iBAAAC,EAAA,yDACrBD,EAAEE,iBADmB,WAGfqK,EAAW9K,SAAWgL,EAAUhL,SAAW0K,GAH5B,wBAIbS,EAAW,IAAIC,UACVC,OAAO,QAAS9K,EAAEI,OAAOmD,MAAMnE,OACxCwL,EAASE,OAAO,OAAQ9K,EAAEI,OAAOqD,KAAKrE,OACtCwL,EAASE,OAAO,QAASX,GAEzBpD,GAAa,GATI,UAWDmB,EAAS,CACvB6C,OAAQ,OACRC,IAAK,gBACLvK,KAAMmK,EACN/B,QAAS,CACP,aAAc5K,EAAKgK,YACnB,eAAgB,yBAjBH,SAWbzH,EAXa,QAqBTC,OACNsG,GAAa,GACbuD,GAAc,GACd5J,OAAOC,SAASC,QAAhB,qBAAsCJ,EAAIC,KAAKuC,MAC/ChD,EAAEI,OAAO6K,SAzBM,0DA6BnBlE,GAAa,GACbuD,GAAc,GACc,MAAxB,KAAItD,SAASC,OACfJ,EAAS,CAAED,SAAS,EAAMlH,IAAK,mBAE/BmH,EAAS,CAAED,SAAS,EAAMlH,IAAK,yBAlCd,0DAAH,sDAuCpB,OACE,cAACqB,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,UAAU,uCAA7B,UACE,oBAAIA,UAAU,qCAAd,sBACA,eAACC,EAAA,EAAD,CAAMC,SAAUqJ,EAAhB,UACE,eAACtJ,EAAA,EAAKE,MAAN,CAAYH,UAAU,OAAtB,UACE,cAACC,EAAA,EAAKI,MAAN,yBACA,cAACJ,EAAA,EAAKK,QAAN,CACE1D,KAAK,OACL2D,YAAY,cACZC,KAAK,QACLR,UAnGK,WACjB,GAAImJ,EAAW/K,QACb,OAAI+K,EAAW9K,QACN,wBACK,uBA+FOyL,GACXrJ,OA9Ie,SAAC7B,GAC5B,IAAI8B,EAAM9B,EAAEI,OAAOhB,MAAM2C,OACrBC,EAAM,eAAQuI,GAClBvI,EAAOxC,SAAU,EAEbsC,EAAIG,QAAU,GAChBD,EAAOvC,SAAU,EACjBuC,EAAOtC,IAAM,sBACJoC,EAAIG,OAAS,GACtBD,EAAOvC,SAAU,EACjBuC,EAAOtC,IAAM,yCACJoC,EAAIG,OAAS,KACtBD,EAAOvC,SAAU,EACjBuC,EAAOtC,IAAM,4CAEbsC,EAAOvC,SAAU,EACjBuC,EAAOtC,IAAM,IAEf8K,EAAc,eAAKxI,KA6HPmJ,WAAS,IAEVZ,EAAW7K,KACV,uBAAO0B,UAAU,kBAAjB,SAAoCmJ,EAAW7K,SAInD,eAAC2B,EAAA,EAAKE,MAAN,CACEH,UAAU,OACVI,UAAU,+BAFZ,UAIE,cAACH,EAAA,EAAKI,MAAN,wBACA,cAACJ,EAAA,EAAKK,QAAN,CACE0J,GAAG,WACHC,KAAM,EACNzJ,KAAK,OACLR,UA7GI,WAChB,GAAIqJ,EAAUjL,QACZ,OAAIiL,EAAUhL,QACL,wBACK,uBAyGO6L,GACX9B,SA3Ic,SAACxJ,GAC3B,IAAI8B,EAAM9B,EAAEI,OAAOhB,MAAM2C,OACrBC,EAAM,eAAQyI,GAClBzI,EAAOxC,SAAU,EAEbsC,EAAIG,QAAU,GAChBD,EAAOvC,SAAU,EACjBuC,EAAOtC,IAAM,qBACJoC,EAAIG,OAAS,GACtBD,EAAOvC,SAAU,EACjBuC,EAAOtC,IAAM,wCACJoC,EAAIG,OAAS,KACtBD,EAAOvC,SAAU,EACjBuC,EAAOtC,IAAM,6CAEbsC,EAAOvC,SAAU,EACjBuC,EAAOtC,IAAM,IAEfgL,EAAa,eAAK1I,OA2HPyI,EAAU/K,KACT,uBAAO0B,UAAU,kBAAjB,SAAoCqJ,EAAU/K,SAGlD,eAAC2B,EAAA,EAAKE,MAAN,CAAYC,UAAU,WAAWJ,UAAU,OAA3C,UACE,cAACC,EAAA,EAAKI,MAAN,yBACA,qBAAKL,UAAU,qCAAf,SACE,cAACH,EAAA,EAAD,CAAKsK,GAAI,EAAGrK,GAAI,EAAhB,SACGiJ,GACC,cAACqB,EAAA,EAAD,CAAOtI,IAAKuI,IAAIC,gBAAgBvB,GAAQwB,WAAS,QAIvD,cAACtK,EAAA,EAAKK,QAAN,CACE1D,KAAK,OACL4D,KAAK,QACLgK,OAAO,qEACPpC,SAAU,SAACxJ,GAAD,OAAOoK,EAASpK,EAAEI,OAAOyL,MAAM,UAG7C,cAACvJ,EAAA,EAAD,CACEC,QAAQ,UACRvE,KAAK,SACLoD,UAAU,QACVoB,UAAW+H,EAAW9K,UAAYgL,EAAUhL,UAAY0K,EAJ1D,SAMGrD,EAAY,cAAgB,oBAGhC3I,EAAMyI,SACL,qBAAKxF,UAAU,sCAAf,SACGjD,EAAMuB,MAGV2K,GACC,qBAAKjJ,UAAU,uCAAf,6C,kBCrJGkE,EAvEO,WACpB,MAA2BhG,qBAAWZ,GAA9BT,EAAR,EAAQA,KAAMc,EAAd,EAAcA,SAER+M,EAAY,uCAAG,sBAAA7L,EAAA,+EAEDK,IAAMC,KAAK,uBAAwB,CACjDyH,MAAO/J,EAAK8J,eAHG,gBAMfhJ,EAAS,CAAEf,KAAM,WACjB0C,OAAOC,SAASC,QAAQ,SAPT,gDAUjBF,OAAOC,SAASC,QAAQ,QAVP,yDAAH,qDAclB,OACE,cAACmL,EAAA,EAAD,CAAQC,kBAAgB,EAACC,OAAO,KAAKC,GAAG,OAAO3J,QAAQ,OAAO4J,OAAO,MAArE,SACE,eAACpL,EAAA,EAAD,WACE,cAACgL,EAAA,EAAOK,MAAR,UACE,cAAC,IAAD,CAAMhL,UAAU,aAAa2B,GAAI,IAAjC,yBAIF,cAACgJ,EAAA,EAAOM,OAAR,CAAe,gBAAc,0BAC7B,cAACN,EAAA,EAAOO,SAAR,CACE9G,GAAG,wBACHpE,UAAU,sBAFZ,SAIE,eAACmL,EAAA,EAAD,CAAKnL,UAAU,GAAf,UACE,cAAC,IAAD,CAASA,UAAU,WAAWoL,OAAK,EAACzJ,GAAG,IAAvC,kBAGE9E,EASE,KARF,qCACE,cAAC,IAAD,CAASmD,UAAU,WAAW2B,GAAG,SAAjC,mBAGA,cAAC,IAAD,CAAS3B,UAAU,WAAW2B,GAAG,YAAjC,yBAKH9E,EACC,qCACE,cAAC,IAAD,CAASmD,UAAU,WAAW2B,GAAG,YAAjC,mBAGA,cAAC,IAAD,CAAS3B,UAAU,WAAW2B,GAAG,gBAAjC,qBAGA,sBACE3B,UAAU,WACVoD,MAAO,CAAEiI,OAAQ,WACjB/H,QAASoH,EAHX,uBAQA,KACJ,cAAC,IAAD,CAAS1K,UAAU,WAAW2B,GAAG,SAAjC,gCC3DG0C,EARA,WACb,OACE,wBAAQrE,UAAU,6CAAlB,SACE,oBAAIA,UAAU,sBAAd,sCCkPSsL,EA9OE,WACf,MAA2BpN,qBAAWZ,GAA9BT,EAAR,EAAQA,KAAMc,EAAd,EAAcA,SAER4N,EAAS3G,cAAYR,GAE3B,EADiBO,cACiCjI,MAA1C6G,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,SAAUzB,EAA7B,EAA6BA,QAE7B,EAA0B5D,mBAASoF,GAAnC,mBAAOpB,EAAP,KAAcqJ,EAAd,KACA,EAAwBrN,mBAASqF,GAAjC,mBAAOnB,EAAP,KAAaoJ,EAAb,KACA,EAA0BtN,mBAAS,MAAnC,mBAAO4K,EAAP,KAAcC,EAAd,KACA,EAAkC7K,oBAAS,GAA3C,mBAAOuH,EAAP,KAAkBC,EAAlB,KACA,EAAoCxH,oBAAS,GAA7C,mBAAO8K,EAAP,KAAmBC,EAAnB,KAEA,EAAoC/K,mBAAS,CAC3CC,SAAS,EACTC,SAAS,EACTC,IAAK,KAHP,mBAAO6K,EAAP,KAAmBC,EAAnB,KAMA,EAAkCjL,mBAAS,CACzCC,SAAS,EACTC,SAAS,EACTC,IAAK,KAHP,mBAAO+K,EAAP,KAAkBC,EAAlB,KAKA,EAA0BnL,mBAAS,CACjCqH,SAAS,EACTlH,IAAK,KAFP,mBAAOvB,GAAP,KAAc0I,GAAd,KA+DMkB,GAAY,uCAAG,4BAAA9H,EAAA,+EAECK,IAAMC,KAAK,8BAA+B,CAC1DyH,MAAO/J,EAAK8J,eAHG,cAEXvH,EAFW,OAKjBzB,EAAS,CACPf,KAAM,gBACNI,QAAQ,2BAAMH,GAAP,IAAagK,YAAazH,EAAIC,KAAKwH,gBAP3B,kBASVzH,EAAIC,MATM,gCAWjBI,QAAQC,IAAR,MAXiB,yDAAH,qDAeZoH,GAAW5H,IAAM6H,SAEvBD,GAASI,aAAaC,QAAQC,IAA9B,+BAAAvI,EAAA,MACE,WAAOwI,GAAP,iBAAAxI,EAAA,yDACMyI,EAAc,IAAIrE,OAEC,IADFgE,YAAWpK,EAAKgK,aACpBU,IAAaD,EAAYE,WAH5C,gCAIuBb,KAJvB,OAIUtH,EAJV,OAKIgI,EAAOI,QAAQ,cAAgBpI,EAAKwH,YALxC,gCAOSQ,GAPT,2CADF,uDAUE,SAACK,GACC,OAAOC,QAAQC,OAAOF,MAI1B,IAAM6B,GAAc,uCAAG,WAAO3K,GAAP,eAAAC,EAAA,yDACrBD,EAAEE,iBADmB,UAGfqK,EAAW9K,UAAWgL,EAAUhL,QAHjB,wBAIbmL,EAAW,IAAIC,UACVC,OAAO,QAASvH,GACzBqH,EAASE,OAAO,OAAQrH,GACxB0G,GAASS,EAASE,OAAO,QAASX,GAClCpD,GAAa,GARI,UAUDmB,GAAS,CACvB6C,OAAQ,MACRC,IAAI,iBAAD,OAAmB2B,GACtBlM,KAAMmK,EACN/B,QAAS,CACP,aAAc5K,EAAKgK,YACnB,eAAgB,yBAhBH,eAoBTxH,OACNsG,GAAa,GACbuD,GAAc,IAtBC,0DA0BnBzJ,QAAQC,IAAR,MACAiG,GAAa,GACbuD,GAAc,GACc,MAAxB,KAAItD,SAASC,OACfJ,GAAS,CAAED,SAAS,EAAMlH,IAAK,mBAE/BmH,GAAS,CAAED,SAAS,EAAMlH,IAAK,yBAhCd,0DAAH,sDAqCpB,OACE,cAACqB,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,UAAU,uCAA7B,UACE,oBAAIA,UAAU,qCAAd,yBACA,eAACC,EAAA,EAAD,CAAMC,SAAUqJ,GAAhB,UACE,eAACtJ,EAAA,EAAKE,MAAN,CAAYH,UAAU,OAAtB,UACE,cAACC,EAAA,EAAKI,MAAN,yBACA,cAACJ,EAAA,EAAKK,QAAN,CACE1D,KAAK,OACLoB,MAAOmE,EACP3B,KAAK,QACLR,UAjGK,WACjB,GAAImJ,EAAW/K,QACb,OAAI+K,EAAW9K,QACN,wBACK,uBA6FOyL,GACX1B,SA5Ie,SAACxJ,GAC5B,IAAI8B,EAAM9B,EAAEI,OAAOhB,MACnBwN,EAAS9K,GACT,IAAIE,EAAM,eAAQuI,GAClBvI,EAAOxC,SAAU,EACbsC,EAAIG,QAAU,GAChBD,EAAOvC,SAAU,EACjBuC,EAAOtC,IAAM,sBACJoC,EAAIG,OAAS,GACtBD,EAAOvC,SAAU,EACjBuC,EAAOtC,IAAM,yCACJoC,EAAIG,OAAS,KACtBD,EAAOvC,SAAU,EACjBuC,EAAOtC,IAAM,4CAEbsC,EAAOvC,SAAU,EACjBuC,EAAOtC,IAAM,IAEf8K,EAAc,eAAKxI,OA4HRuI,EAAW7K,KACV,uBAAO0B,UAAU,kBAAjB,SAAoCmJ,EAAW7K,SAGnD,eAAC2B,EAAA,EAAKE,MAAN,CACEH,UAAU,OACVI,UAAU,+BAFZ,UAIE,cAACH,EAAA,EAAKI,MAAN,wBACA,cAACJ,EAAA,EAAKK,QAAN,CACE0J,GAAG,WACHhM,MAAOqE,EACP4H,KAAM,EACNzJ,KAAK,OACLR,UA1GI,WAChB,GAAIqJ,EAAUjL,QACZ,OAAIiL,EAAUhL,QACL,wBACK,uBAsGO6L,GACX9B,SAxIc,SAACxJ,GAC3B,IAAI8B,EAAM9B,EAAEI,OAAOhB,MACnByN,EAAQ/K,GACR,IAAIE,EAAM,eAAQyI,GAClBzI,EAAOxC,SAAU,EACbsC,EAAIG,QAAU,GAChBD,EAAOvC,SAAU,EACjBuC,EAAOtC,IAAM,qBACJoC,EAAIG,OAAS,GACtBD,EAAOvC,SAAU,EACjBuC,EAAOtC,IAAM,wCACJoC,EAAIG,OAAS,KACtBD,EAAOvC,SAAU,EACjBuC,EAAOtC,IAAM,6CAEbsC,EAAOvC,SAAU,EACjBuC,EAAOtC,IAAM,IAEfgL,EAAa,eAAK1I,OAwHPyI,EAAU/K,KACT,uBAAO0B,UAAU,kBAAjB,SAAoCqJ,EAAU/K,SAGlD,eAAC2B,EAAA,EAAKE,MAAN,CAAYC,UAAU,WAAWJ,UAAU,OAA3C,UACE,cAACC,EAAA,EAAKI,MAAN,yBACA,qBAAKL,UAAU,qCAAf,SACE,cAACH,EAAA,EAAD,CAAKsK,GAAI,EAAGrK,GAAI,EAAhB,SACGiJ,EACC,cAACqB,EAAA,EAAD,CAAOtI,IAAKuI,IAAIC,gBAAgBvB,GAAQwB,WAAS,IAEjD,cAACH,EAAA,EAAD,CACEtI,IAAG,qEAAgEC,GACnEwI,WAAS,QAKjB,cAACtK,EAAA,EAAKK,QAAN,CACE1D,KAAK,OACL4D,KAAK,QACLgK,OAAO,qEACPpC,SAAU,SAACxJ,GAAD,OAAOoK,EAASpK,EAAEI,OAAOyL,MAAM,UAG7C,cAACvJ,EAAA,EAAD,CACEC,QAAQ,UACRvE,KAAK,SACLoD,UAAU,QACVoB,UAAW+H,EAAW9K,UAAYgL,EAAUhL,QAJ9C,SAMGqH,EAAY,cAAgB,mBAGhC3I,GAAMyI,SACL,qBAAKxF,UAAU,sCAAf,SACGjD,GAAMuB,MAGV2K,GACC,qBAAKjJ,UAAU,uCAAf,+CC/CG0L,GA7KK,SAAChD,GACnB,MAA2BxK,qBAAWZ,GAA9BT,EAAR,EAAQA,KAAMc,EAAd,EAAcA,SACNyG,EAAOQ,cAAPR,GACR,EAAwBjG,mBAAS,MAAjC,mBAAOgB,EAAP,KAAawM,EAAb,KACA,EAAkCxN,mBAAS,CACzCqH,SAAS,EACTgB,WAAW,IAFb,mBAAOC,EAAP,KAAkBC,EAAlB,KAKA9I,qBAAU,YACO,uCAAG,4BAAAiB,EAAA,sEACEK,IAAM2F,IAAN,wBAA2BT,IAD7B,OACVhF,EADU,OAEhBuM,EAAQvM,EAAIC,MAFI,2CAAH,qDAIfuM,KACC,CAACxH,IAEJ,IAAM0C,EAAW5H,IAAM6H,SACvB,GAAIlK,EAAM,CACR,IAAM8J,EAAY,uCAAG,4BAAA9H,EAAA,+EAECK,IAAMC,KAAK,8BAA+B,CAC1DyH,MAAO/J,EAAK8J,eAHG,cAEXvH,EAFW,OAKjBzB,EAAS,CACPf,KAAM,gBACNI,QAAQ,2BAAMH,GAAP,IAAagK,YAAazH,EAAIC,KAAKwH,gBAP3B,kBASVzH,EAAIC,MATM,gCAWjBI,QAAQC,IAAR,MAXiB,yDAAH,qDAgBZsH,EAAeC,YAAWpK,EAAKgK,aACrCC,EAASI,aAAaC,QAAQC,IAA9B,+BAAAvI,EAAA,MACE,WAAOwI,GAAP,iBAAAxI,EAAA,yDACMyI,EAAc,IAAIrE,OACC,IAAnB+D,EAAaO,IAAaD,EAAYE,WAF5C,gCAGuBb,IAHvB,OAGUtH,EAHV,OAIIgI,EAAOI,QAAQ,cAAgBpI,EAAKwH,YAJxC,gCAMSQ,GANT,2CADF,uDASE,SAACK,GACC,OAAOC,QAAQC,OAAOF,MAI5B,IAAMlG,EAAQ,uCAAG,WAAO+J,GAAP,SAAA1M,EAAA,+EAEGiI,EAASe,OAAT,wBAAiC0D,GAAU,CACzD9D,QAAS,CACP,aAAc5K,EAAKgK,eAJV,gBAQXH,EAAa,CAAElB,SAAS,EAAOgB,WAAW,IAC1CqF,WAAWvM,OAAOC,SAASC,QAAQ,QAAS,MATjC,gDAYbkH,EAAa,CAAElB,SAAS,EAAMgB,WAAW,IAZ5B,yDAAH,sDAgBd,OAAOrH,EACL,eAACQ,EAAA,EAAD,WACG8G,EAAUjB,SACT,cAACuC,EAAA,EAAD,CACE5G,QAAQ,SACR6G,QAAS,kBACPtB,EAAa,CACXlB,SAAS,EACTgB,WAAW,KAGfxG,UAAU,gBACViI,aAAW,EATb,SAWE,cAACF,EAAA,EAAMG,QAAP,CAAelI,UAAU,MAAzB,oCAGHyG,EAAUD,WACT,cAACuB,EAAA,EAAD,CACE5G,QAAQ,UACR6G,QAAS,kBACPtB,EAAa,CACXlB,SAAS,EACTgB,WAAW,KAGfxG,UAAU,gBACViI,aAAW,EATb,SAWE,cAACF,EAAA,EAAMG,QAAP,CAAelI,UAAU,MAAzB,kDAKJ,eAAC0B,EAAA,EAAD,CAAM1B,UAAU,OAAhB,UACE,qBAAKoD,MAAO,CAAE+E,UAAW,UAAzB,SACE,cAACzG,EAAA,EAAKG,IAAN,CACE7B,UAAU,YACV8B,IACE3C,EAAK4C,QAAL,qEACkE5C,EAAK4C,SACnEC,MAIV,eAACN,EAAA,EAAKO,KAAN,WACE,sBAAKjC,UAAU,mBAAf,UACE,cAAC0B,EAAA,EAAKQ,MAAN,UAAa/C,EAAKgD,QAClB,cAACT,EAAA,EAAKU,KAAN,CAAWpC,UAAU,eAAeoD,MAAO,CAAE0I,WAAY,GAAzD,SACG3M,EAAKkD,UAGV,eAACO,EAAA,EAAD,CAAWzB,QAAQ,QAAnB,UACE,cAACyB,EAAA,EAAUC,KAAX,UACGhG,GAAQA,EAAK+E,MAAQzC,EAAK2D,UAAUlB,IACnC,cAAC,IAAD,CAAM5B,UAAU,gBAAgB2B,GAAG,gBAAnC,SACGxC,EAAK2D,UAAY3D,EAAK2D,UAAUC,SAAW,SAG9C,cAAC,IAAD,CACE/C,UAAU,gBACV2B,GAAI,CACFqB,SAAS,YAAD,OAAc7D,EAAK2D,UAAUlB,KACrClF,MAAO,CACLqG,SAAU5D,EAAK2D,UAAUC,WAL/B,SASG5D,EAAK2D,UAAY3D,EAAK2D,UAAUC,SAAW,WAIlD,cAACH,EAAA,EAAUC,KAAX,UACG,IAAII,KAAK9D,EAAK+D,WAAWC,iBAE3BtG,GAAQA,EAAK+E,MAAQzC,EAAK2D,UAAUlB,IACnC,eAACgB,EAAA,EAAUC,KAAX,WACE,cAAC,IAAD,CACE7C,UAAU,kBACV2B,GAAI,CACFqB,SAAS,cAAD,OAAgB7D,EAAKyC,KAC7BlF,MAAO,CACL6G,UAAWpE,EAAKgD,MAChBqB,SAAUrE,EAAKkD,KACfN,QAAS5C,EAAK4C,UAGlBqB,MAAO,CAAEC,YAAa,OAVxB,uBAcA,cAACnC,EAAA,EAAD,CAAQC,QAAQ,SAASmC,QAAS,kBAAM9B,EAAS4C,IAAjD,4BAIA,iBAMZ,qBAAKpE,UAAU,oCAAf,SACE,cAACkF,EAAA,EAAD,CAASC,UAAU,SAASC,KAAK,cClKjC2G,GAAQnD,IAAMoD,MAAK,kBAAM,uDA4DhBC,GA1DH,WACV,IAAQpP,EAASqB,qBAAWZ,GAApBT,KAER,OACE,mCAEE,eAAC,IAAD,CAAeqP,SAAS,OAAxB,UACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIf,OAAK,EAACgB,UAAW7D,IACjC,cAAC,IAAD,CAAO4D,KAAK,SAASC,UAAWnO,IAChC,cAAC,IAAD,CAAOkO,KAAK,YAAYC,UAAW/G,IACnC,cAAC,IAAD,CAAO8G,KAAK,eAAeC,UAAW9H,IACtC,cAAC,IAAD,CAAO6H,KAAK,aAAaC,UAAWV,KACpC,cAAC,IAAD,CACES,KAAK,SACLE,OAAQ,WACN,OACE,cAAC,WAAD,CACEC,SACE,qBAAKtM,UAAU,gCAAf,SACE,cAACkF,EAAA,EAAD,CACElF,UAAU,OACVmF,UAAU,SACVC,KAAK,aANb,SAWE,cAAC2G,GAAD,SAKPlP,EACC,qCACE,cAAC,IAAD,CAAOsP,KAAK,gBAAgBC,UAAWrG,IACvC,cAAC,IAAD,CAAOoG,KAAK,YAAYC,UAAWtD,IACnC,cAAC,IAAD,CAAOqD,KAAK,iBAAiBC,UAAWd,OAG1C,qCACE,cAAC,IAAD,CAAUiB,KAAK,gBAAgB5K,GAAG,WAClC,cAAC,IAAD,CAAU4K,KAAK,YAAY5K,GAAG,WAC9B,cAAC,IAAD,CAAU4K,KAAK,iBAAiB5K,GAAG,cAIvC,cAAC,IAAD,CAAU4K,KAAK,QAAQ5K,GAAG,MAC1B,cAAC,IAAD,CAAOyK,UAAW5D,OAGpB,cAAC,EAAD,UCrERgE,IAASH,OACP,cAAC,IAAMI,WAAP,UACE,cAAC,EAAD,UACE,cAAC,GAAD,QAGJC,SAASC,eAAe,U,2CCAX5H,IAZF,SAAC,GAAe,IAAb5C,EAAY,EAAZA,MACd,OACE,qBAAKnC,UAAU,wDAAf,SACE,qBAAKA,UAAU,gCAAf,SACE,oBAAIA,UAAU,4BAAd,SACGmC,GAAgB,8B","file":"static/js/main.e697398c.chunk.js","sourcesContent":["const Reducer = (state, action) => {\n  switch (action.type) {\n    case \"LOGIN_START\":\n      return {\n        user: null,\n        isFetching: true,\n        error: false,\n      };\n    case \"LOGIN_SUCCESS\":\n      return { user: action.payload, isFetching: false, error: false };\n    case \"LOGIN_FAILURE\":\n      return { user: null, isFetching: false, error: true };\n    case \"LOGOUT\":\n      return { user: null, isFetching: false, error: false };\n    default:\n      return state;\n  }\n};\n\nexport default Reducer;\n","import { createContext, useReducer, useEffect } from \"react\";\nimport Reducer from \"./Reducer\";\n\nconst INITIAL_STATE = {\n  user: JSON.parse(localStorage.getItem(\"user\")) || null,\n  isFetching: false,\n  error: false,\n};\n\nexport const Context = createContext(INITIAL_STATE);\n\nexport const ContextProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(Reducer, INITIAL_STATE);\n\n  useEffect(() => {\n    localStorage.setItem(\"user\", JSON.stringify(state.user));\n  }, [state.user]);\n\n  return (\n    <Context.Provider\n      value={{\n        user: state.user,\n        isFetching: state.isFetching,\n        error: state.error,\n        dispatch,\n      }}\n    >\n      {children}\n    </Context.Provider>\n  );\n};\n","import axios from \"axios\";\nimport { useContext, useState } from \"react\";\nimport { Context } from \"../context/Context\";\nimport { Button, Container, Form, Row, Col } from \"react-bootstrap\";\n\nconst Login = () => {\n  const { dispatch, isFetching, error } = useContext(Context);\n\n  const [emailValid, setEmailValid] = useState({\n    touched: false,\n    isValid: false,\n    msg: \"\",\n  });\n\n  const [passwordValid, setPasswordValid] = useState({\n    touched: false,\n    isValid: false,\n    msg: \"\",\n  });\n\n  const validateEmail = (email) => {\n    var re = /\\S+@\\S+\\.\\S+/;\n    return re.test(email);\n  };\n\n  const checkEmailValidation = (e) => {\n    let val = e.target.value.trim();\n    let valids = { ...emailValid };\n    valids.touched = true;\n    if (val.length <= 0) {\n      valids.isValid = false;\n      valids.msg = \"Email is required.\";\n    } else if (!validateEmail(val)) {\n      valids.isValid = false;\n      valids.msg = \"Email is not valid\";\n    } else if (val.length > 100) {\n      valids.isValid = false;\n      valids.msg = \"Email must be less than 100 characters.\";\n    } else {\n      valids.isValid = true;\n      valids.msg = \"\";\n    }\n    setEmailValid({ ...valids });\n  };\n\n  const checkPasswordValidation = (e) => {\n    let val = e.target.value.trim();\n    let valids = { ...passwordValid };\n    valids.touched = true;\n    if (val.length <= 0) {\n      valids.isValid = false;\n      valids.msg = \"Password is required.\";\n    } else if (val.length > 255) {\n      valids.isValid = false;\n      valids.msg = \"Password must be less than 255 characters.\";\n    } else {\n      valids.isValid = true;\n      valids.msg = \"\";\n    }\n    setPasswordValid({ ...valids });\n  };\n\n  const submitHandler = async (e) => {\n    e.preventDefault();\n    dispatch({ type: \"LOGIN_START\" });\n    let email = e.target.email.value,\n      password = e.target.password.value;\n    try {\n      if (emailValid.isValid && passwordValid.isValid) {\n        let res = await axios.post(\"/api/v1/users/login\", { email, password });\n        dispatch({ type: \"LOGIN_SUCCESS\", payload: res.data });\n        window.location.replace(\"/app\");\n      }\n    } catch (err) {\n      dispatch({ type: \"LOGIN_FAILURE\" });\n      console.log(err);\n    }\n  };\n\n  const emailStyle = () => {\n    if (emailValid.touched) {\n      if (emailValid.isValid) {\n        return \"border border-success\";\n      } else return \"border border-danger\";\n    }\n  };\n\n  const passwordStyle = () => {\n    if (passwordValid.touched) {\n      if (passwordValid.isValid) {\n        return \"border border-success\";\n      } else return \"border border-danger\";\n    }\n  };\n\n  return (\n    <Container>\n      <Row>\n        <Col md={6} lg={4} className=\" mx-auto bg-light p-4 my-4 shadow-sm\">\n          <h2 className=\" text-center h4 m-3 text-secondary\">Login</h2>\n          <Form onSubmit={submitHandler}>\n            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n              <Form.Label>Email address</Form.Label>\n              <Form.Control\n                type=\"email\"\n                placeholder=\"Enter email\"\n                name=\"email\"\n                onBlur={checkEmailValidation}\n                className={emailStyle()}\n              />\n              {emailValid.msg && (\n                <small className=\"text-danger p-1\">{emailValid.msg}</small>\n              )}\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"formPlaintextPassword\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                placeholder=\"Enter password\"\n                name=\"password\"\n                onKeyUp={checkPasswordValidation}\n                className={passwordStyle()}\n              />\n              {passwordValid.msg && (\n                <small className=\"text-danger p-1\">{passwordValid.msg}</small>\n              )}\n            </Form.Group>\n            <Button\n              variant=\"primary\"\n              type=\"submit\"\n              className=\"w-100\"\n              disabled={!emailValid.isValid || !passwordValid.isValid}\n            >\n              {isFetching ? \"Loading ...\" : \"Login\"}\n            </Button>\n            {error && (\n              <div className=\"alert alert-danger text-center my-2\">\n                Invalid email or password\n              </div>\n            )}\n          </Form>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Login;\n","export default __webpack_public_path__ + \"static/media/defaultImg.11e9da86.jpg\";","import { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Context } from \"../../context/Context\";\nimport { Card, Button, ListGroup } from \"react-bootstrap\";\nimport defaultImg from \"../../assets/images/defaultImg.jpg\";\n\nconst Post = ({ post, onShow, userProfile, onDelete, modalBtn }) => {\n  const { user } = useContext(Context);\n\n  // Cut post body\n  const cutString = () => {\n    if (post.body.length < 150) return post.body;\n    let trimmedString = post.body.substr(0, 150);\n    trimmedString = trimmedString.substr(\n      0,\n      Math.min(trimmedString.length, trimmedString.lastIndexOf(\" \"))\n    );\n    return `${trimmedString} . . .`;\n  };\n\n  return (\n    <Card className=\"mb-4 mx-4 mx-lg-0\">\n      <Link to={`/posts/${post._id}`}>\n        <Card.Img\n          variant=\"top\"\n          src={\n            post.postImg\n              ? `https://azstorageabdelrazek.blob.core.windows.net/postimgs/${post.postImg}`\n              : defaultImg\n          }\n        />\n      </Link>\n      <Card.Body>\n        <div className=\"px-1 text-center\">\n          <Card.Title>{post.title}</Card.Title>\n          <Card.Text>{cutString()}</Card.Text>\n        </div>\n        <ListGroup variant=\"flush\">\n          <ListGroup.Item>\n            {user && user._id === post.createdBy._id ? (\n              <Link className=\"username-link\" to=\"/edit-profile\">\n                {post.createdBy ? post.createdBy.username : \"user\"}\n              </Link>\n            ) : (\n              <Link\n                className=\"username-link\"\n                to={{\n                  pathname: `/profile/${post.createdBy._id}`,\n                  state: {\n                    username: post.createdBy.username,\n                  },\n                }}\n              >\n                {post.createdBy ? post.createdBy.username : \"user\"}\n              </Link>\n            )}\n          </ListGroup.Item>\n          <ListGroup.Item>\n            {new Date(post.createdAt).toDateString()}\n          </ListGroup.Item>\n          <ListGroup.Item>\n            <Link\n              className=\"btn btn-primary\"\n              style={{ marginRight: \"5px\" }}\n              to={`/posts/${post._id}`}\n            >\n              Open Post\n            </Link>\n            {!userProfile && (\n              <Button variant=\"primary\" onClick={() => onShow(post)}>\n                Open Modal\n              </Button>\n            )}\n            {userProfile && (\n              <>\n                <Link\n                  className=\"btn btn-primary\"\n                  to={{\n                    pathname: `/edit-post/${post._id}`,\n                    state: {\n                      postTitle: post.title,\n                      postBody: post.body,\n                      postImg: post.postImg,\n                    },\n                  }}\n                  style={{ marginRight: \"5px\" }}\n                >\n                  Edit Post\n                </Link>\n                <Button variant=\"danger\" onClick={() => onDelete(post)}>\n                  Delete Post\n                </Button>\n              </>\n            )}\n          </ListGroup.Item>\n        </ListGroup>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default Post;\n","import { Modal, Button } from \"react-bootstrap\";\n\nconst PostModal = ({ showModal, hideModal, modalData }) => {\n  return (\n    <Modal show={showModal} size=\"lg\" centered onHide={hideModal}>\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          {modalData.title}\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <p>{modalData.body}</p>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button onClick={hideModal}>Close</Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default PostModal;\n","import axios from \"axios\";\nimport Head from \"../components/blog/Head\";\nimport Post from \"../components/blog/Post\";\nimport PostModal from \"../components/blog/PostModal\";\nimport { useEffect, useState } from \"react\";\nimport { useLocation, useParams } from \"react-router-dom\";\nimport { Container, Row, Spinner, Col } from \"react-bootstrap\";\n\nconst Profile = () => {\n  const [posts, setPosts] = useState([]);\n  const [modalData, setModalData] = useState({});\n  const [showModal, setShowModal] = useState(false);\n\n  const location = useLocation();\n  const { id } = useParams();\n  const { username } = location.state;\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const res = await axios.get(`/api/v1/posts?userId=${id}`);\n        setPosts(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    fetchPosts();\n  }, [id]);\n\n  const showModalFun = (post) => {\n    setShowModal(true);\n    setModalData(post);\n  };\n\n  const hideModal = () => {\n    setShowModal(false);\n  };\n\n  const renderPosts = () => {\n    return posts.length > 0 ? (\n      posts.map((post) => (\n        <Col md={6} lg={4} key={post._id}>\n          <Post post={post} onShow={() => showModalFun(post)} />\n        </Col>\n      ))\n    ) : (\n      <Spinner animation=\"border\" role=\"status\" />\n    );\n  };\n\n  return (\n    <>\n      <Head title={`${username}`} />\n      <Container>\n        <h2 id=\"posts\" className=\"h3 border-bottom mb-4 pb-4 text-primary\">\n          {username} posts\n        </h2>\n        <PostModal\n          showModal={showModal}\n          hideModal={hideModal}\n          modalData={modalData}\n        />\n        <Row className=\"justify-content-center g-4\">{renderPosts()}</Row>\n      </Container>\n    </>\n  );\n};\n\nexport default Profile;\n","import axios from \"axios\";\nimport { useState } from \"react\";\nimport { Button, Container, Form, Row, Col } from \"react-bootstrap\";\n\nconst Register = () => {\n  const [usernameValid, setUsernameValid] = useState({\n    touched: false,\n    isValid: false,\n    msg: \"\",\n  });\n\n  const [emailValid, setEmailValid] = useState({\n    touched: false,\n    isValid: false,\n    msg: \"\",\n  });\n\n  const [passwordValid, setPasswordValid] = useState({\n    touched: false,\n    isValid: false,\n    msg: \"\",\n  });\n\n  const [error, setError] = useState({\n    isError: false,\n    msg: \"\",\n  });\n\n  const [isLoading, setisLoading] = useState(false);\n\n  const checkUsernameValidation = (e) => {\n    let val = e.target.value.trim();\n    let valids = { ...usernameValid };\n    valids.touched = true;\n    if (val.length <= 0) {\n      valids.isValid = false;\n      valids.msg = \"Username is required.\";\n    } else if (val.length < 3) {\n      valids.isValid = false;\n      valids.msg = \"Username must be more than 2 characters.\";\n    } else if (val.length > 100) {\n      valids.isValid = false;\n      valids.msg = \"Username must be less than 100 characters.\";\n    } else {\n      valids.isValid = true;\n      valids.msg = \"\";\n    }\n    setUsernameValid({ ...valids });\n  };\n\n  const validateEmail = (email) => {\n    var re = /\\S+@\\S+\\.\\S+/;\n    return re.test(email);\n  };\n\n  const checkEmailValidation = (e) => {\n    let val = e.target.value.trim();\n    let valids = { ...emailValid };\n    valids.touched = true;\n    if (val.length <= 0) {\n      valids.isValid = false;\n      valids.msg = \"Email is required.\";\n    } else if (!validateEmail(val)) {\n      valids.isValid = false;\n      valids.msg = \"Email is not valid\";\n    } else if (val.length > 100) {\n      valids.isValid = false;\n      valids.msg = \"Email must be less than 100 characters.\";\n    } else {\n      valids.isValid = true;\n      valids.msg = \"\";\n    }\n    setEmailValid({ ...valids });\n  };\n\n  const checkPasswordValidation = (e) => {\n    let val = e.target.value.trim();\n    let valids = { ...passwordValid };\n    valids.touched = true;\n    if (val.length <= 0) {\n      valids.isValid = false;\n      valids.msg = \"Password is required.\";\n    } else if (val.length < 4) {\n      valids.isValid = false;\n      valids.msg = \"Password must be more than 3 characters.\";\n    } else if (val.length > 255) {\n      valids.isValid = false;\n      valids.msg = \"Password must be less than 255 characters.\";\n    } else {\n      valids.isValid = true;\n      valids.msg = \"\";\n    }\n    setPasswordValid({ ...valids });\n  };\n\n  const submitHandler = async (e) => {\n    e.preventDefault();\n\n    setisLoading(true);\n    setError({ isError: false, msg: \"\" });\n\n    let username = e.target.username.value,\n      email = e.target.email.value,\n      password = e.target.password.value;\n\n    try {\n      if (\n        usernameValid.isValid &&\n        emailValid.isValid &&\n        passwordValid.isValid\n      ) {\n        let res = await axios.post(\"/api/v1/users\", {\n          username,\n          email,\n          password,\n        });\n        if (res.data) {\n          window.location.replace(\"/app/login\");\n          setisLoading(false);\n        }\n      }\n    } catch (err) {\n      setisLoading(false);\n      if (err.response.status === 409) {\n        setError({ isError: true, msg: \"Email is already used\" });\n      } else {\n        setError({ isError: true, msg: \"Somthing went wrong!\" });\n      }\n    }\n  };\n\n  const usernameStyle = () => {\n    if (usernameValid.touched) {\n      if (usernameValid.isValid) {\n        return \"border border-success\";\n      } else return \"border border-danger\";\n    }\n  };\n\n  const emailStyle = () => {\n    if (emailValid.touched) {\n      if (emailValid.isValid) {\n        return \"border border-success\";\n      } else return \"border border-danger\";\n    }\n  };\n\n  const passwordStyle = () => {\n    if (passwordValid.touched) {\n      if (passwordValid.isValid) {\n        return \"border border-success\";\n      } else return \"border border-danger\";\n    }\n  };\n\n  return (\n    <Container>\n      <Row>\n        <Col md={6} lg={4} className=\" mx-auto bg-light p-4 my-4 shadow-sm\">\n          <h2 className=\" text-center h4 m-3 text-secondary\">Register</h2>\n          <Form onSubmit={submitHandler}>\n            <Form.Group className=\"mb-3\">\n              <Form.Label>Username</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter username\"\n                name=\"username\"\n                onBlur={checkUsernameValidation}\n                className={usernameStyle()}\n              />\n              {usernameValid.msg && (\n                <small className=\"text-danger p-1\">{usernameValid.msg}</small>\n              )}\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n              <Form.Label>Email address</Form.Label>\n              <Form.Control\n                type=\"email\"\n                placeholder=\"Enter email\"\n                name=\"email\"\n                onBlur={checkEmailValidation}\n                className={emailStyle()}\n              />\n              {emailValid.msg && (\n                <small className=\"text-danger p-1\">{emailValid.msg}</small>\n              )}\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"formPlaintextPassword1\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                placeholder=\"Enter password\"\n                name=\"password\"\n                onKeyUp={checkPasswordValidation}\n                className={passwordStyle()}\n              />\n              {passwordValid.msg && (\n                <small className=\"text-danger p-1\">{passwordValid.msg}</small>\n              )}\n            </Form.Group>\n            <Button\n              variant=\"primary\"\n              type=\"submit\"\n              className=\"w-100\"\n              disabled={\n                !usernameValid.isValid ||\n                !emailValid.isValid ||\n                !passwordValid.isValid\n              }\n            >\n              {isLoading ? \"Loading ...\" : \"Register\"}\n            </Button>\n            {error.isError && (\n              <div className=\"alert alert-danger text-center my-2\">\n                {error.msg}\n              </div>\n            )}\n          </Form>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Register;\n","import axios from \"axios\";\nimport jwt_decode from \"jwt-decode\";\nimport { Link } from \"react-router-dom\";\nimport Post from \"../components/blog/Post\";\nimport { Context } from \"../context/Context\";\nimport { useState, useEffect, useContext } from \"react\";\nimport { Button, Container, Form, Row, Col, Alert } from \"react-bootstrap\";\n\nconst EditProfile = () => {\n  const { user, dispatch } = useContext(Context);\n\n  const [username, setUsername] = useState(user.username);\n  const [email, setEmail] = useState(user.email);\n\n  const [usernameValid, setUsernameValid] = useState({\n    touched: false,\n    isValid: true,\n    msg: \"\",\n  });\n\n  const [emailValid, setEmailValid] = useState({\n    touched: false,\n    isValid: true,\n    msg: \"\",\n  });\n\n  const [posts, setPosts] = useState([]);\n  const [isLoading, setisLoading] = useState(false);\n  const [updateForm, setUpdateForm] = useState(false);\n  const [deleteSuccess, setDeleteSuccess] = useState(false);\n  const [updateSuccess, setupdateSuccess] = useState(false);\n\n  const [showAlert, setShowAlert] = useState({\n    isError: false,\n    isSuccess: false,\n  });\n\n  const [error, setError] = useState({\n    isError: false,\n    msg: \"\",\n  });\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const res = await axios.get(`/api/v1/posts?userId=${user._id}`);\n        setPosts(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    fetchPosts();\n  }, [deleteSuccess, user._id, updateSuccess]);\n\n  const refreshToken = async () => {\n    try {\n      const res = await axios.post(\"/api/v1/users/refresh-token\", {\n        token: user.refreshToken,\n      });\n      dispatch({\n        type: \"LOGIN_SUCCESS\",\n        payload: { ...user, accessToken: res.data.accessToken },\n      });\n      return res.data;\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const axiosJWT = axios.create();\n  //This will run before every axios request to refresh token\n  const decodedToken = jwt_decode(user.accessToken);\n  axiosJWT.interceptors.request.use(\n    async (config) => {\n      let currentDate = new Date();\n      if (decodedToken.exp * 1000 < currentDate.getTime()) {\n        const data = await refreshToken();\n        config.headers[\"auth-token\"] = data.accessToken;\n      }\n      return config;\n    },\n    (err) => {\n      return Promise.reject(err);\n    }\n  );\n\n  const onDelete = async (post) => {\n    try {\n      let res = await axiosJWT.delete(`/api/v1/posts/${post._id}`, {\n        headers: {\n          \"auth-token\": user.accessToken,\n        },\n      });\n      if (res) {\n        setDeleteSuccess(!deleteSuccess);\n        setShowAlert({ isError: false, isSuccess: true });\n      }\n    } catch (err) {\n      console.log(err);\n      setShowAlert({ isError: true, isSuccess: false });\n    }\n  };\n  const checkUsernameValidation = (e) => {\n    let val = e.target.value;\n    setUsername(val);\n    let valids = { ...usernameValid };\n    valids.touched = true;\n    if (val.length <= 0) {\n      valids.isValid = false;\n      valids.msg = \"Username is required.\";\n    } else if (val.length < 4) {\n      valids.isValid = false;\n      valids.msg = \"Username must be more than 3 characters.\";\n    } else if (val.length > 100) {\n      valids.isValid = false;\n      valids.msg = \"Username must be less than 100 characters.\";\n    } else {\n      valids.isValid = true;\n      valids.msg = \"\";\n    }\n    setUsernameValid({ ...valids });\n  };\n\n  const validateEmail = (email) => {\n    var re = /\\S+@\\S+\\.\\S+/;\n    return re.test(email);\n  };\n\n  const checkEmailValidation = (e) => {\n    let val = e.target.value;\n    setEmail(val);\n    let valids = { ...emailValid };\n    valids.touched = true;\n    if (val.length <= 0) {\n      valids.isValid = false;\n      valids.msg = \"Email is required.\";\n    } else if (!validateEmail(val)) {\n      valids.isValid = false;\n      valids.msg = \"Email is not valid\";\n    } else if (val.length > 100) {\n      valids.isValid = false;\n      valids.msg = \"Email must be less than 100 characters.\";\n    } else {\n      valids.isValid = true;\n      valids.msg = \"\";\n    }\n    setEmailValid({ ...valids });\n  };\n\n  const submitHandler = async (e) => {\n    e.preventDefault();\n    try {\n      setisLoading(true);\n      setError({ isError: false, msg: \"\" });\n      if (usernameValid.isValid && emailValid.isValid) {\n        let res = await axiosJWT.put(\n          `/api/v1/users/${user._id}`,\n          { username, email },\n          { headers: { \"auth-token\": user.accessToken } }\n        );\n\n        if (res) {\n          dispatch({\n            type: \"LOGIN_SUCCESS\",\n            payload: {\n              ...user,\n              username: res.data.username,\n              email: res.data.email,\n            },\n          });\n          setisLoading(false);\n          setupdateSuccess(true);\n        }\n      }\n    } catch (err) {\n      setupdateSuccess(false);\n      setisLoading(false);\n      if (err.response.status === 409) {\n        setError({ isError: true, msg: \"Email is already used\" });\n      } else {\n        setError({ isError: true, msg: \"Somthing went wrong!\" });\n      }\n    }\n  };\n\n  const usernameStyle = () => {\n    if (usernameValid.touched) {\n      if (usernameValid.isValid) {\n        return \"border border-success\";\n      } else return \"border border-danger\";\n    }\n  };\n\n  const emailStyle = () => {\n    if (emailValid.touched) {\n      if (emailValid.isValid) {\n        return \"border border-success\";\n      } else return \"border border-danger\";\n    }\n  };\n\n  const renderPosts = () => {\n    return posts.length > 0 ? (\n      posts.map((post) => (\n        <Col md={6} lg={4} key={post._id}>\n          <Post post={post} userProfile={true} onDelete={onDelete} />\n        </Col>\n      ))\n    ) : (\n      // <Spinner animation=\"border\" role=\"status\" />\n      <h5 className=\"my-4\">\n        You do not have any posts, <Link to=\"/add-post\">Write now</Link>\n      </h5>\n    );\n  };\n\n  return (\n    <Container>\n      {showAlert.isError && (\n        <Alert\n          variant=\"danger\"\n          onClose={() =>\n            setShowAlert({\n              isError: false,\n              isSuccess: false,\n            })\n          }\n          className=\"success-alert\"\n          dismissible\n        >\n          <Alert.Heading className=\"f-1\">Somthing went wrong!</Alert.Heading>\n        </Alert>\n      )}\n      {showAlert.isSuccess && (\n        <Alert\n          variant=\"success\"\n          onClose={() =>\n            setShowAlert({\n              isError: false,\n              isSuccess: false,\n            })\n          }\n          className=\"success-alert\"\n          dismissible\n        >\n          <Alert.Heading className=\"f-1\">\n            Post has been successfully deleted\n          </Alert.Heading>\n        </Alert>\n      )}\n\n      <Row>\n        <Col md={6} lg={4} className=\" mx-auto bg-light p-4 my-4 shadow-sm\">\n          {!updateForm && (\n            <div style={{ textAlign: \"center\" }}>\n              <Button\n                variant=\"primary\"\n                className=\"w-50\"\n                onClick={() => setUpdateForm(true)}\n              >\n                Update Profile\n              </Button>\n            </div>\n          )}\n          {updateForm && (\n            <Form onSubmit={submitHandler}>\n              <Form.Group className=\"mb-3\">\n                <Form.Label>Username</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Enter username\"\n                  name=\"username\"\n                  value={username}\n                  onChange={checkUsernameValidation}\n                  className={usernameStyle()}\n                />\n                {usernameValid.msg && (\n                  <small className=\"text-danger p-1\">{usernameValid.msg}</small>\n                )}\n              </Form.Group>\n              <Form.Group\n                className=\"mb-3\"\n                controlId=\"exampleForm.ControlInput1\"\n              >\n                <Form.Label>Email address</Form.Label>\n                <Form.Control\n                  type=\"email\"\n                  placeholder=\"Enter email\"\n                  name=\"email\"\n                  value={email}\n                  onChange={checkEmailValidation}\n                  className={emailStyle()}\n                />\n                {emailValid.msg && (\n                  <small className=\"text-danger p-1\">{emailValid.msg}</small>\n                )}\n              </Form.Group>\n              <Button\n                variant=\"primary\"\n                type=\"submit\"\n                className=\"w-100\"\n                disabled={!usernameValid.isValid || !emailValid.isValid}\n              >\n                {isLoading ? \"Loading ...\" : \"Update\"}\n              </Button>\n              {updateSuccess && (\n                <div className=\"alert alert-success text-center my-2\">\n                  Update Successfully\n                </div>\n              )}\n              {error.isError && (\n                <div className=\"alert alert-danger text-center my-2\">\n                  {error.msg}\n                </div>\n              )}\n            </Form>\n          )}\n        </Col>\n      </Row>\n      <h2 id=\"posts\" className=\"h3 border-bottom mb-4 pb-4 text-primary\">\n        Your Posts\n      </h2>\n      <Row className=\"justify-content-center g-4\">{renderPosts()}</Row>\n    </Container>\n  );\n};\n\nexport default EditProfile;\n","import axios from \"axios\";\nimport Post from \"./Post\";\nimport PostModal from \"./PostModal\";\nimport { useState, useEffect } from \"react\";\nimport { Row, Col, Container, Spinner } from \"react-bootstrap\";\n\nconst Posts = () => {\n  const [posts, setPosts] = useState([]);\n  const [modalData, setModalData] = useState({});\n  const [showModal, setShowModal] = useState(false);\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const res = await axios.get(\"/api/v1/posts\");\n        res && setPosts(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    fetchPosts();\n  }, []);\n\n  const showModalFun = (post) => {\n    setShowModal(true);\n    setModalData(post);\n  };\n\n  const hideModal = () => {\n    setShowModal(false);\n  };\n\n  return (\n    <Container>\n      <h2 id=\"posts\" className=\"h3 border-bottom mb-4 pb-4 text-primary\">\n        Posts\n      </h2>\n      <PostModal\n        showModal={showModal}\n        hideModal={hideModal}\n        modalData={modalData}\n      />\n      <Row className=\"justify-content-center g-4\">\n        {posts.length > 0 ? (\n          posts.map((post) => (\n            <Col md={6} lg={4} key={post._id}>\n              <Post post={post} onShow={() => showModalFun(post)} />\n            </Col>\n          ))\n        ) : (\n          <Spinner className=\"my-4\" animation=\"border\" role=\"status\" />\n        )}\n      </Row>\n    </Container>\n  );\n};\n\nexport default Posts;\n","import { useContext } from \"react\";\nimport Head from \"../components/blog/Head\";\nimport Posts from \"../components/blog/Posts\";\nimport { Context } from \"../context/Context\";\n\nconst Blog = () => {\n  const { user } = useContext(Context);\n\n  return (\n    <div>\n      <Head title={user && `Welcome ${user.username}, to our blog`} />\n      <Posts />\n    </div>\n  );\n};\n\nexport default Blog;\n","import React from \"react\";\nimport Head from \"./blog/Head\";\nclass NotFound extends React.Component {\n  componentDidMount() {\n    this.props.history.replace(\"/not-found\");\n  }\n  render() {\n    return (\n      <div>\n        <Head title=\"404 not found\" />\n      </div>\n    );\n  }\n}\n\nexport default NotFound;\n","import axios from \"axios\";\nimport jwt_decode from \"jwt-decode\";\nimport { useState, useContext } from \"react\";\nimport { Context } from \"../../context/Context\";\nimport { Button, Container, Form, Row, Col, Image } from \"react-bootstrap\";\n\nconst AddPost = (props) => {\n  const { user, dispatch } = useContext(Context);\n  const [image, setImage] = useState(null);\n  const [isLoading, setisLoading] = useState(false);\n  const [addSuccess, setaddSuccess] = useState(false);\n\n  const [titleValid, setTitleValid] = useState({\n    touched: false,\n    isValid: false,\n    msg: \"\",\n  });\n\n  const [bodyValid, setBodyValid] = useState({\n    touched: false,\n    isValid: false,\n    msg: \"\",\n  });\n\n  const [error, setError] = useState({\n    isError: false,\n    msg: \"\",\n  });\n\n  const checkTitleValidation = (e) => {\n    let val = e.target.value.trim();\n    let valids = { ...titleValid };\n    valids.touched = true;\n\n    if (val.length <= 0) {\n      valids.isValid = false;\n      valids.msg = \"Title is required.\";\n    } else if (val.length < 3) {\n      valids.isValid = false;\n      valids.msg = \"Title must be more than 2 characters.\";\n    } else if (val.length > 255) {\n      valids.isValid = false;\n      valids.msg = \"Title must be less than 255 characters.\";\n    } else {\n      valids.isValid = true;\n      valids.msg = \"\";\n    }\n    setTitleValid({ ...valids });\n  };\n\n  const checkBodyValidation = (e) => {\n    let val = e.target.value.trim();\n    let valids = { ...bodyValid };\n    valids.touched = true;\n\n    if (val.length <= 0) {\n      valids.isValid = false;\n      valids.msg = \"Body is required.\";\n    } else if (val.length < 5) {\n      valids.isValid = false;\n      valids.msg = \"Body must be more than 4 characters.\";\n    } else if (val.length > 10000) {\n      valids.isValid = false;\n      valids.msg = \"Body must be less than 10000 characters.\";\n    } else {\n      valids.isValid = true;\n      valids.msg = \"\";\n    }\n    setBodyValid({ ...valids });\n  };\n\n  const titleStyle = () => {\n    if (titleValid.touched) {\n      if (titleValid.isValid) {\n        return \"border border-success\";\n      } else return \"border border-danger\";\n    }\n  };\n\n  const bodyStyle = () => {\n    if (bodyValid.touched) {\n      if (bodyValid.isValid) {\n        return \"border border-success\";\n      } else return \"border border-danger\";\n    }\n  };\n\n  const refreshToken = async () => {\n    try {\n      const res = await axios.post(\"/api/v1/users/refresh-token\", {\n        token: user.refreshToken,\n      });\n      dispatch({\n        type: \"LOGIN_SUCCESS\",\n        payload: { ...user, accessToken: res.data.accessToken },\n      });\n      return res.data;\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const axiosJWT = axios.create();\n  //This will run before axios request to refresh token\n  axiosJWT.interceptors.request.use(\n    async (config) => {\n      let currentDate = new Date();\n      const decodedToken = jwt_decode(user.accessToken);\n      if (decodedToken.exp * 1000 < currentDate.getTime()) {\n        const data = await refreshToken();\n        config.headers[\"auth-token\"] = data.accessToken;\n      }\n      return config;\n    },\n    (err) => {\n      return Promise.reject(err);\n    }\n  );\n\n  const addPostHandler = async (e) => {\n    e.preventDefault();\n    try {\n      if (titleValid.isValid && bodyValid.isValid && image) {\n        let formData = new FormData();\n        formData.append(\"title\", e.target.title.value);\n        formData.append(\"body\", e.target.body.value);\n        formData.append(\"image\", image);\n\n        setisLoading(true);\n\n        let res = await axiosJWT({\n          method: \"post\",\n          url: \"/api/v1/posts\",\n          data: formData,\n          headers: {\n            \"auth-token\": user.accessToken,\n            \"Content-Type\": \"multipart/form-data\",\n          },\n        });\n\n        if (res.data) {\n          setisLoading(false);\n          setaddSuccess(true);\n          window.location.replace(`/app/posts/${res.data._id}`);\n          e.target.reset();\n        }\n      }\n    } catch (err) {\n      setisLoading(false);\n      setaddSuccess(false);\n      if (err.response.status === 400) {\n        setError({ isError: true, msg: \"Invalid inputs\" });\n      } else {\n        setError({ isError: true, msg: \"Somthing went wrong!\" });\n      }\n    }\n  };\n\n  return (\n    <Container>\n      <Row>\n        <Col md={6} lg={4} className=\" mx-auto bg-light p-4 my-4 shadow-sm\">\n          <h2 className=\" text-center h4 m-3 text-secondary\">Add Post</h2>\n          <Form onSubmit={addPostHandler}>\n            <Form.Group className=\"mb-3\">\n              <Form.Label>Post title</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter Title\"\n                name=\"title\"\n                className={titleStyle()}\n                onBlur={checkTitleValidation}\n                autoFocus\n              />\n              {titleValid.msg && (\n                <small className=\"text-danger p-1\">{titleValid.msg}</small>\n              )}\n            </Form.Group>\n\n            <Form.Group\n              className=\"mb-3\"\n              controlId=\"exampleForm.ControlTextarea1\"\n            >\n              <Form.Label>Post body</Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                rows={3}\n                name=\"body\"\n                className={bodyStyle()}\n                onChange={checkBodyValidation}\n              />\n              {bodyValid.msg && (\n                <small className=\"text-danger p-1\">{bodyValid.msg}</small>\n              )}\n            </Form.Group>\n            <Form.Group controlId=\"formFile\" className=\"mb-3\">\n              <Form.Label>Post image</Form.Label>\n              <div className=\"d-flex my-2 justify-content-center\">\n                <Col xs={6} md={4}>\n                  {image && (\n                    <Image src={URL.createObjectURL(image)} thumbnail />\n                  )}\n                </Col>\n              </div>\n              <Form.Control\n                type=\"file\"\n                name=\"image\"\n                accept=\"image/png, image/jpeg, image/jpg, image/JPG, image/svg, image/webp\"\n                onChange={(e) => setImage(e.target.files[0])}\n              />\n            </Form.Group>\n            <Button\n              variant=\"primary\"\n              type=\"submit\"\n              className=\"w-100\"\n              disabled={!titleValid.isValid || !bodyValid.isValid || !image}\n            >\n              {isLoading ? \"Loading ...\" : \"Add New Post\"}\n            </Button>\n          </Form>\n          {error.isError && (\n            <div className=\"alert alert-danger text-center my-2\">\n              {error.msg}\n            </div>\n          )}\n          {addSuccess && (\n            <div className=\"alert alert-success text-center my-2\">\n              Post Added Successfully\n            </div>\n          )}\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default AddPost;\n","import axios from \"axios\";\nimport { useContext } from \"react\";\nimport { Context } from \"../../context/Context\";\nimport { NavLink, Link } from \"react-router-dom\";\nimport { Nav, Navbar, Container } from \"react-bootstrap\";\n\nexport const Header = () => {\n  const { user, dispatch } = useContext(Context);\n\n  const handleLogout = async () => {\n    try {\n      let res = await axios.post(\"/api/v1/users/logout\", {\n        token: user.refreshToken,\n      });\n      if (res) {\n        dispatch({ type: \"LOGOUT\" });\n        window.location.replace(\"/app\");\n      }\n    } catch (err) {\n      window.location.replace(\"/app\");\n    }\n  };\n\n  return (\n    <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\" sticky=\"top\">\n      <Container>\n        <Navbar.Brand>\n          <Link className=\"white-link\" to={\"/\"}>\n            Mern Blog\n          </Link>\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse\n          id=\"responsive-navbar-nav\"\n          className=\"justify-content-end\"\n        >\n          <Nav className=\"\">\n            <NavLink className=\"nav-link\" exact to=\"/\">\n              home\n            </NavLink>\n            {!user ? (\n              <>\n                <NavLink className=\"nav-link\" to=\"/login\">\n                  login\n                </NavLink>\n                <NavLink className=\"nav-link\" to=\"/register\">\n                  register\n                </NavLink>\n              </>\n            ) : null}\n            {user ? (\n              <>\n                <NavLink className=\"nav-link\" to=\"/add-post\">\n                  write\n                </NavLink>\n                <NavLink className=\"nav-link\" to=\"/edit-profile\">\n                  profile\n                </NavLink>\n                <span\n                  className=\"nav-link\"\n                  style={{ cursor: \"pointer\" }}\n                  onClick={handleLogout}\n                >\n                  logout\n                </span>\n              </>\n            ) : null}\n            <NavLink className=\"nav-link\" to=\"/about\">\n              contact\n            </NavLink>\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n};\n\nexport default Header;\n","const Footer = () => {\n  return (\n    <footer className=\"d-flex justify-content-center p-4 bg-light\">\n      <h4 className=\"lead text-secondary\"> &copy; 2021 Abdelrazek</h4>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import axios from \"axios\";\nimport jwt_decode from \"jwt-decode\";\nimport { useState, useContext } from \"react\";\nimport { Context } from \"../../context/Context\";\nimport { useParams, useLocation } from \"react-router\";\nimport { Button, Container, Form, Row, Col, Image } from \"react-bootstrap\";\n\nconst EditPost = () => {\n  const { user, dispatch } = useContext(Context);\n\n  const postId = useParams().id;\n  const location = useLocation();\n  const { postTitle, postBody, postImg } = location.state;\n\n  const [title, setTitle] = useState(postTitle);\n  const [body, setBody] = useState(postBody);\n  const [image, setImage] = useState(null);\n  const [isLoading, setisLoading] = useState(false);\n  const [addSuccess, setaddSuccess] = useState(false);\n\n  const [titleValid, setTitleValid] = useState({\n    touched: false,\n    isValid: true,\n    msg: \"\",\n  });\n\n  const [bodyValid, setBodyValid] = useState({\n    touched: false,\n    isValid: true,\n    msg: \"\",\n  });\n  const [error, setError] = useState({\n    isError: false,\n    msg: \"\",\n  });\n\n  const checkTitleValidation = (e) => {\n    let val = e.target.value;\n    setTitle(val);\n    let valids = { ...titleValid };\n    valids.touched = true;\n    if (val.length <= 0) {\n      valids.isValid = false;\n      valids.msg = \"Title is required.\";\n    } else if (val.length < 3) {\n      valids.isValid = false;\n      valids.msg = \"Title must be more than 2 characters.\";\n    } else if (val.length > 255) {\n      valids.isValid = false;\n      valids.msg = \"Title must be less than 255 characters.\";\n    } else {\n      valids.isValid = true;\n      valids.msg = \"\";\n    }\n    setTitleValid({ ...valids });\n  };\n\n  const checkBodyValidation = (e) => {\n    let val = e.target.value;\n    setBody(val);\n    let valids = { ...bodyValid };\n    valids.touched = true;\n    if (val.length <= 0) {\n      valids.isValid = false;\n      valids.msg = \"Body is required.\";\n    } else if (val.length < 5) {\n      valids.isValid = false;\n      valids.msg = \"Body must be more than 4 characters.\";\n    } else if (val.length > 10000) {\n      valids.isValid = false;\n      valids.msg = \"Body must be less than 10000 characters.\";\n    } else {\n      valids.isValid = true;\n      valids.msg = \"\";\n    }\n    setBodyValid({ ...valids });\n  };\n\n  const titleStyle = () => {\n    if (titleValid.touched) {\n      if (titleValid.isValid) {\n        return \"border border-success\";\n      } else return \"border border-danger\";\n    }\n  };\n\n  const bodyStyle = () => {\n    if (bodyValid.touched) {\n      if (bodyValid.isValid) {\n        return \"border border-success\";\n      } else return \"border border-danger\";\n    }\n  };\n\n  const refreshToken = async () => {\n    try {\n      const res = await axios.post(\"/api/v1/users/refresh-token\", {\n        token: user.refreshToken,\n      });\n      dispatch({\n        type: \"LOGIN_SUCCESS\",\n        payload: { ...user, accessToken: res.data.accessToken },\n      });\n      return res.data;\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const axiosJWT = axios.create();\n  //This will run before axios request to refresh token\n  axiosJWT.interceptors.request.use(\n    async (config) => {\n      let currentDate = new Date();\n      const decodedToken = jwt_decode(user.accessToken);\n      if (decodedToken.exp * 1000 < currentDate.getTime()) {\n        const data = await refreshToken();\n        config.headers[\"auth-token\"] = data.accessToken;\n      }\n      return config;\n    },\n    (err) => {\n      return Promise.reject(err);\n    }\n  );\n\n  const addPostHandler = async (e) => {\n    e.preventDefault();\n    try {\n      if (titleValid.isValid && bodyValid.isValid) {\n        let formData = new FormData();\n        formData.append(\"title\", title);\n        formData.append(\"body\", body);\n        image && formData.append(\"image\", image);\n        setisLoading(true);\n\n        let res = await axiosJWT({\n          method: \"put\",\n          url: `/api/v1/posts/${postId}`,\n          data: formData,\n          headers: {\n            \"auth-token\": user.accessToken,\n            \"Content-Type\": \"multipart/form-data\",\n          },\n        });\n\n        if (res.data) {\n          setisLoading(false);\n          setaddSuccess(true);\n        }\n      }\n    } catch (err) {\n      console.log(err);\n      setisLoading(false);\n      setaddSuccess(false);\n      if (err.response.status === 400) {\n        setError({ isError: true, msg: \"Invalid inputs\" });\n      } else {\n        setError({ isError: true, msg: \"Somthing went wrong!\" });\n      }\n    }\n  };\n\n  return (\n    <Container>\n      <Row>\n        <Col md={6} lg={4} className=\" mx-auto bg-light p-4 my-4 shadow-sm\">\n          <h2 className=\" text-center h4 m-3 text-secondary\">Update Post</h2>\n          <Form onSubmit={addPostHandler}>\n            <Form.Group className=\"mb-3\">\n              <Form.Label>Post title</Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={title}\n                name=\"title\"\n                className={titleStyle()}\n                onChange={checkTitleValidation}\n              />\n              {titleValid.msg && (\n                <small className=\"text-danger p-1\">{titleValid.msg}</small>\n              )}\n            </Form.Group>\n            <Form.Group\n              className=\"mb-3\"\n              controlId=\"exampleForm.ControlTextarea1\"\n            >\n              <Form.Label>Post body</Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                value={body}\n                rows={3}\n                name=\"body\"\n                className={bodyStyle()}\n                onChange={checkBodyValidation}\n              />\n              {bodyValid.msg && (\n                <small className=\"text-danger p-1\">{bodyValid.msg}</small>\n              )}\n            </Form.Group>\n            <Form.Group controlId=\"formFile\" className=\"mb-3\">\n              <Form.Label>Post image</Form.Label>\n              <div className=\"d-flex my-2 justify-content-center\">\n                <Col xs={6} md={4}>\n                  {image ? (\n                    <Image src={URL.createObjectURL(image)} thumbnail />\n                  ) : (\n                    <Image\n                      src={`https://azstorageabdelrazek.blob.core.windows.net/postimgs/${postImg}`}\n                      thumbnail\n                    />\n                  )}\n                </Col>\n              </div>\n              <Form.Control\n                type=\"file\"\n                name=\"image\"\n                accept=\"image/png, image/jpeg, image/jpg, image/JPG, image/svg, image/webp\"\n                onChange={(e) => setImage(e.target.files[0])}\n              />\n            </Form.Group>\n            <Button\n              variant=\"primary\"\n              type=\"submit\"\n              className=\"w-100\"\n              disabled={!titleValid.isValid || !bodyValid.isValid}\n            >\n              {isLoading ? \"Loading ...\" : \"Update Post\"}\n            </Button>\n          </Form>\n          {error.isError && (\n            <div className=\"alert alert-danger text-center my-2\">\n              {error.msg}\n            </div>\n          )}\n          {addSuccess && (\n            <div className=\"alert alert-success text-center my-2\">\n              Post Updated Successfully\n            </div>\n          )}\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default EditPost;\n","import axios from \"axios\";\nimport jwt_decode from \"jwt-decode\";\nimport { Context } from \"../../context/Context\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { useState, useEffect, useContext } from \"react\";\nimport defaultImg from \"../../assets/images/defaultImg.jpg\";\nimport {\n  Spinner,\n  Container,\n  Button,\n  Card,\n  ListGroup,\n  Alert,\n} from \"react-bootstrap\";\n\nconst PostDetails = (props) => {\n  const { user, dispatch } = useContext(Context);\n  const { id } = useParams();\n  const [post, setPost] = useState(null);\n  const [showAlert, setShowAlert] = useState({\n    isError: false,\n    isSuccess: false,\n  });\n\n  useEffect(() => {\n    const fetchPost = async () => {\n      const res = await axios.get(`/api/v1/posts/${id}`);\n      setPost(res.data);\n    };\n    fetchPost();\n  }, [id]);\n\n  const axiosJWT = axios.create();\n  if (user) {\n    const refreshToken = async () => {\n      try {\n        const res = await axios.post(\"/api/v1/users/refresh-token\", {\n          token: user.refreshToken,\n        });\n        dispatch({\n          type: \"LOGIN_SUCCESS\",\n          payload: { ...user, accessToken: res.data.accessToken },\n        });\n        return res.data;\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    //This will run before every axios request to refresh token\n    const decodedToken = jwt_decode(user.accessToken);\n    axiosJWT.interceptors.request.use(\n      async (config) => {\n        let currentDate = new Date();\n        if (decodedToken.exp * 1000 < currentDate.getTime()) {\n          const data = await refreshToken();\n          config.headers[\"auth-token\"] = data.accessToken;\n        }\n        return config;\n      },\n      (err) => {\n        return Promise.reject(err);\n      }\n    );\n  }\n  const onDelete = async (postId) => {\n    try {\n      let res = await axiosJWT.delete(`/api/v1/posts/${postId}`, {\n        headers: {\n          \"auth-token\": user.accessToken,\n        },\n      });\n      if (res) {\n        setShowAlert({ isError: false, isSuccess: true });\n        setTimeout(window.location.replace(\"/app\"), 3000);\n      }\n    } catch (err) {\n      setShowAlert({ isError: true, isSuccess: false });\n    }\n  };\n\n  return post ? (\n    <Container>\n      {showAlert.isError && (\n        <Alert\n          variant=\"danger\"\n          onClose={() =>\n            setShowAlert({\n              isError: false,\n              isSuccess: false,\n            })\n          }\n          className=\"success-alert\"\n          dismissible\n        >\n          <Alert.Heading className=\"f-1\">Somthing went wrong!</Alert.Heading>\n        </Alert>\n      )}\n      {showAlert.isSuccess && (\n        <Alert\n          variant=\"success\"\n          onClose={() =>\n            setShowAlert({\n              isError: false,\n              isSuccess: false,\n            })\n          }\n          className=\"success-alert\"\n          dismissible\n        >\n          <Alert.Heading className=\"f-1\">\n            Post has been successfully deleted\n          </Alert.Heading>\n        </Alert>\n      )}\n      <Card className=\"my-4\">\n        <div style={{ textAlign: \"center\" }}>\n          <Card.Img\n            className=\"w-50 my-2\"\n            src={\n              post.postImg\n                ? `https://azstorageabdelrazek.blob.core.windows.net/postimgs/${post.postImg}`\n                : defaultImg\n            }\n          />\n        </div>\n        <Card.Body>\n          <div className=\"px-1 text-center\">\n            <Card.Title>{post.title}</Card.Title>\n            <Card.Text className=\"first-letter\" style={{ lineHeight: 2 }}>\n              {post.body}\n            </Card.Text>\n          </div>\n          <ListGroup variant=\"flush\">\n            <ListGroup.Item>\n              {user && user._id === post.createdBy._id ? (\n                <Link className=\"username-link\" to=\"/edit-profile\">\n                  {post.createdBy ? post.createdBy.username : \"user\"}\n                </Link>\n              ) : (\n                <Link\n                  className=\"username-link\"\n                  to={{\n                    pathname: `/profile/${post.createdBy._id}`,\n                    state: {\n                      username: post.createdBy.username,\n                    },\n                  }}\n                >\n                  {post.createdBy ? post.createdBy.username : \"user\"}\n                </Link>\n              )}\n            </ListGroup.Item>\n            <ListGroup.Item>\n              {new Date(post.createdAt).toDateString()}\n            </ListGroup.Item>\n            {user && user._id === post.createdBy._id ? (\n              <ListGroup.Item>\n                <Link\n                  className=\"btn btn-primary\"\n                  to={{\n                    pathname: `/edit-post/${post._id}`,\n                    state: {\n                      postTitle: post.title,\n                      postBody: post.body,\n                      postImg: post.postImg,\n                    },\n                  }}\n                  style={{ marginRight: \"5px\" }}\n                >\n                  Edit Post\n                </Link>\n                <Button variant=\"danger\" onClick={() => onDelete(id)}>\n                  Delete Post\n                </Button>\n              </ListGroup.Item>\n            ) : null}\n          </ListGroup>\n        </Card.Body>\n      </Card>\n    </Container>\n  ) : (\n    <div className=\"d-flex justify-content-center m-4\">\n      <Spinner animation=\"border\" role=\"status\" />\n    </div>\n  );\n};\n\nexport default PostDetails;\n","import React, { Suspense, useContext } from \"react\";\nimport { Spinner } from \"react-bootstrap\";\nimport { Context } from \"./context/Context\";\nimport { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\n\n// Import views\nimport Login from \"./views/Login\";\nimport Profile from \"./views/Profile\";\nimport Register from \"./views/Register\";\nimport EditProfile from \"./views/EditProfile\";\n\n// Import components\nimport Blog from \"./views/Blog\";\nimport NotFound from \"./components/NotFound\";\nimport AddPost from \"./components/blog/AddPost\";\nimport Header from \"./components/layout/Header\";\nimport Footer from \"./components/layout/Footer\";\nimport EditPost from \"./components/blog/EditPost\";\nimport PostDetails from \"./components/blog/PostDetails\";\n\n// Lazy Loading\nconst About = React.lazy(() => import(\"./views/About\"));\n\nconst App = () => {\n  const { user } = useContext(Context);\n\n  return (\n    <>\n      {/* Using basename=\"/app\" to avoid server problems */}\n      <BrowserRouter basename=\"/app\">\n        <Header />\n        <Switch>\n          <Route path=\"/\" exact component={Blog} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/register\" component={Register} />\n          <Route path=\"/profile/:id\" component={Profile} />\n          <Route path=\"/posts/:id\" component={PostDetails} />\n          <Route\n            path=\"/about\"\n            render={() => {\n              return (\n                <Suspense\n                  fallback={\n                    <div className=\"d-flex justify-content-center\">\n                      <Spinner\n                        className=\"my-4\"\n                        animation=\"border\"\n                        role=\"status\"\n                      />\n                    </div>\n                  }\n                >\n                  <About />\n                </Suspense>\n              );\n            }}\n          />\n          {user ? (\n            <>\n              <Route path=\"/edit-profile\" component={EditProfile} />\n              <Route path=\"/add-post\" component={AddPost} />\n              <Route path=\"/edit-post/:id\" component={EditPost} />\n            </>\n          ) : (\n            <>\n              <Redirect from=\"/edit-profile\" to=\"/login\" />\n              <Redirect from=\"/add-post\" to=\"/login\" />\n              <Redirect from=\"/edit-post/:id\" to=\"/login\" />\n            </>\n          )}\n\n          <Redirect from=\"/home\" to=\"/\" />\n          <Route component={NotFound} />\n          {/* Redirect \"from\" attribute is used only on switch */}\n        </Switch>\n        <Footer />\n      </BrowserRouter>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./assets/styles/main.css\";\nimport App from \"./App\";\nimport { ContextProvider } from \"./context/Context\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ContextProvider>\n      <App />\n    </ContextProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","const Head = ({ title }) => {\n  return (\n    <div className=\"head d-flex justify-content-center align-items-center\">\n      <div className=\"d-flex justify-content-center\">\n        <h1 className=\"text-white display-2 mx-1\">\n          {title ? title : \"Welcome to Our Blog\"}\n        </h1>\n      </div>\n    </div>\n  );\n};\n\nexport default Head;\n"],"sourceRoot":""}