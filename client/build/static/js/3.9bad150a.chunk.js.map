{"version":3,"sources":["components/blog/AddPost.js"],"names":["AddPost","props","useState","touched","isValid","msg","titleValid","setTitleValid","bodyValid","setBodyValid","isLoading","setisLoading","addSuccess","setaddSuccess","addPostHandler","e","a","preventDefault","title","target","value","body","sendPost","res","console","log","reset","post","Promise","resolve","reject","setTimeout","md","lg","className","onSubmit","Group","controlId","Label","Control","type","placeholder","name","titleStyle","onBlur","val","trim","valids","length","split","autoFocus","as","rows","bodyStyle","onChange","variant","disabled"],"mappings":"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","file":"static/js/3.9bad150a.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport { Button, Container, Form, Row, Col } from \"react-bootstrap\";\n\nconst AddPost = (props) => {\n  // const [title, setTitle] = useState(\"\");\n  // const [body, setBody] = useState(\"\");\n\n  const [titleValid, setTitleValid] = useState({\n    touched: false,\n    isValid: false,\n    msg: \"\",\n  });\n\n  const [bodyValid, setBodyValid] = useState({\n    touched: false,\n    isValid: false,\n    msg: \"\",\n  });\n\n  const [isLoading, setisLoading] = useState(false);\n\n  const [addSuccess, setaddSuccess] = useState(false);\n\n  const checkTitleValidation = (e) => {\n    let val = e.target.value.trim();\n    let valids = { ...titleValid };\n    valids.touched = true;\n    if (val.length <= 0) {\n      valids.isValid = false;\n      valids.msg = \"Title is required.\";\n    } else if (val.split(\" \").length < 3) {\n      valids.isValid = false;\n      valids.msg = \"Title must be more than 2 words.\";\n    } else if (val.split(\" \").length > 10) {\n      valids.isValid = false;\n      valids.msg = \"Title must be less than 10 words.\";\n    } else {\n      valids.isValid = true;\n      valids.msg = \"\";\n    }\n    setTitleValid({ ...valids });\n  };\n\n  const checkBodyValidation = (e) => {\n    let val = e.target.value.trim();\n    let valids = { ...bodyValid };\n    valids.touched = true;\n    if (val.length <= 0) {\n      valids.isValid = false;\n      valids.msg = \"Body is required.\";\n    } else if (val.split(\" \").length < 10) {\n      valids.isValid = false;\n      valids.msg = \"Title must be more than 10 words.\";\n    } else if (val.split(\" \").length > 500) {\n      valids.isValid = false;\n      valids.msg = \"Title must be less than 500 words.\";\n    } else {\n      valids.isValid = true;\n      valids.msg = \"\";\n    }\n    setBodyValid({ ...valids });\n  };\n\n  const titleStyle = () => {\n    if (titleValid.touched) {\n      if (titleValid.isValid) {\n        return \"border border-success\";\n      } else return \"border border-danger\";\n    }\n  };\n\n  const bodyStyle = () => {\n    if (bodyValid.touched) {\n      if (bodyValid.isValid) {\n        return \"border border-success\";\n      } else return \"border border-danger\";\n    }\n  };\n\n  const addPostHandler = async (e) => {\n    e.preventDefault();\n    let title = e.target.title.value,\n      body = e.target.body.value;\n    if (titleValid.isValid && bodyValid.isValid) {\n      setisLoading(true);\n      let res = await sendPost({ title, body });\n      console.log(res);\n      e.target.reset();\n    }\n  };\n\n  const sendPost = (post) => {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        resolve(post);\n        setisLoading(false);\n        setaddSuccess(true);\n        // setTitle(\"\");\n        // setBody(\"\");\n      }, 2000);\n    });\n  };\n\n  return (\n    <Container>\n      <Row>\n        <Col md={6} lg={4} className=\" mx-auto bg-light p-4 my-4 shadow-sm\">\n          <h2 className=\" text-center h4 m-3 text-secondary\">Add Post</h2>\n          <Form onSubmit={addPostHandler}>\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n              <Form.Label>Post title</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter Title\"\n                name=\"title\"\n                className={titleStyle()}\n                onBlur={checkTitleValidation}\n                autoFocus\n              />\n              {titleValid.msg && (\n                <small className=\"text-danger p-1\">{titleValid.msg}</small>\n              )}\n            </Form.Group>\n\n            <Form.Group\n              className=\"mb-3\"\n              controlId=\"exampleForm.ControlTextarea1\"\n            >\n              <Form.Label>Post body</Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                rows={3}\n                name=\"body\"\n                className={bodyStyle()}\n                onChange={checkBodyValidation}\n              />\n              {bodyValid.msg && (\n                <small className=\"text-danger p-1\">{bodyValid.msg}</small>\n              )}\n            </Form.Group>\n            <Button\n              variant=\"primary\"\n              type=\"submit\"\n              className=\"w-100\"\n              disabled={!titleValid.isValid || !bodyValid.isValid}\n            >\n              {isLoading ? \"Loading ...\" : \"Add New Post\"}\n            </Button>\n          </Form>\n          {addSuccess && (\n            <div className=\"alert alert-success text-center my-2\">\n              Post Added Successfully\n            </div>\n          )}\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default AddPost;\n"],"sourceRoot":""}